{"version":3,"file":"create-account-section.js","sources":["../../../../../frag-core/node_modules/@polymer/iron-label/iron-label.js","../../../../../frag-core/node_modules/random-sentence-generator/deps/verb-past-tense.js","../../../../../frag-core/node_modules/random-sentence-generator/deps/wordlists/wordlists6.js","../../../../../frag-core/node_modules/random-sentence-generator/random-sentence-generator.js","../../../../../frag-core/src/components/login-view/create-account-section.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n`<iron-label>` provides a version of the `<label>` element that works with\nCustom Elements as well as native elements.\n\nAll text in the `iron-label` will be applied to the target element as a\nscreen-reader accessible description.\n\nThere are three ways to use `iron-label` to target an element:\n\n1. place an element inside iron-label and some text:\n\n        <iron-label>\n          Label for the Button\n          <paper-button>button</paper-button>\n        </iron-label>\n\n2. place some elements inside iron-label and target one with the\n`iron-label-target` attribute. The other elements will provide the label for\nthat element Note: This is not necessary if the element you want to label is the\nfirst element child of iron-label:\n\n        <iron-label>\n          <span>Label for the Button</span>\n          <paper-button iron-label-target>button</paper-button>\n        </iron-label>\n\n        <iron-label>\n          <paper-button>button</paper-button>\n          <span>Label for the Button</span>\n        </iron-label>\n\n3. Set the `for` attribute on the `iron-label` element with the id of the target\nelement in the same document or ShadowRoot:\n\n        <iron-label for=\"foo\">\n          Context for the button with the \"foo\" class\"\n        </iron-label>\n        <paper-button id=\"foo\">Far away button</paper-button>\n\nAll taps on the `iron-label` will be forwarded to the \"target\" element.\n\n@group Iron Elements\n@element iron-label\n@demo demo/index.html\n@homepage polymer.github.io\n*/\nexport const IronLabel = Polymer({\n  is: 'iron-label',\n\n  listeners: {'tap': '_tapHandler'},\n\n  properties: {\n    /**\n     * An ID reference to another element that needs to be\n     * labelled by this `iron-label` element.\n     */\n    for: {\n      type: String,\n      value: '',\n      reflectToAttribute: true,\n      observer: '_forChanged'\n    },\n    /**\n     * @type {Element}\n     */\n    _forElement: Object\n  },\n\n  attached: function() {\n    this._forChanged();\n  },\n\n  ready: function() {\n    this._generateLabelId();\n  },\n\n  // generate a unique id for this element\n  _generateLabelId: function() {\n    if (!this.id) {\n      var id = 'iron-label-' + IronLabel._labelNumber++;\n      dom(this).setAttribute('id', id);\n    }\n  },\n\n  _findTarget: function() {\n    if (this.for) {\n      // external target\n      var scope = dom(this).getOwnerRoot();\n      return dom(scope).querySelector('#' + this.for);\n    } else {\n      // explicit internal target\n      var el = dom(this).querySelector('[iron-label-target]');\n      if (!el) {\n        // implicit internal target\n        el = dom(this).firstElementChild;\n      }\n      return el;\n    }\n  },\n\n  _tapHandler: function(ev) {\n    if (!this._forElement) {\n      return;\n    }\n    var target = dom(ev).localTarget;\n    if (target === this._forElement) {\n      return;\n    }\n    this._forElement.focus();\n    this._forElement.click();\n  },\n\n  _applyLabelledBy: function() {\n    if (this._forElement) {\n      dom(this._forElement).setAttribute('aria-labelledby', this.id);\n    }\n  },\n\n  _forChanged: function() {\n    if (this._forElement) {\n      dom(this._forElement).removeAttribute('aria-labelledby');\n    }\n    this._forElement = this._findTarget();\n    this._applyLabelledBy();\n  }\n});\n\n// global counter for unique label ids\nIronLabel._labelNumber = 0;\n","// Sourced from https://gist.github.com/letsgetrandy/1e05a68ea74ba6736eb5\r\n\r\nexport const EXCEPTIONS = {\r\n    'are': 'were',\r\n    'eat': 'ate',\r\n    'go': 'went',\r\n    'have': 'had',\r\n    'inherit': 'inherited',\r\n    'is': 'was',\r\n    'run': 'ran',\r\n    'sit': 'sat',\r\n    'visit': 'visited'\r\n}\r\n\r\nexport const getPastTense = (verb, exceptions = EXCEPTIONS) => {\r\n    if (exceptions[verb]) {\r\n        return exceptions[verb]\r\n    }\r\n    if ((/e$/i).test(verb)) {\r\n        return verb + 'd'\r\n    }\r\n    if ((/[aeiou]c$/i).test(verb)) {\r\n        return verb + 'ked'\r\n    }\r\n    // for american english only\r\n    if ((/el$/i).test(verb)) {\r\n        return verb + 'ed'\r\n    }\r\n    if ((/[aeio][aeiou][dlmnprst]$/).test(verb)) {\r\n        return verb + 'ed'\r\n    }\r\n    if ((/[aeiou][bdglmnprst]$/i).test(verb)) {\r\n        return verb.replace(/(.+[aeiou])([bdglmnprst])/, '$1$2$2ed')\r\n    }\r\n    return verb + 'ed'\r\n}\r\n","import { getPastTense } from '../verb-past-tense.js'\r\n\r\nexport const verbs = [\r\n    'abase', 'abate', 'abduct', 'abet', 'abhor', 'abide', 'abjure', 'ablate', 'abort', 'abound', 'abseil', 'absorb', 'abuse', 'abut', 'accede', 'accent', 'accept', 'access', 'accord', 'accost', 'accrue', 'accuse', 'ache', 'acquit', 'act', 'adapt', 'add', 'addict', 'addle', 'adduce', 'adhere', 'adjoin', 'adjust', 'admire', 'admit', 'adopt', 'adore', 'adorn', 'advert', 'advise', 'aerate', 'affect', 'affirm', 'affix', 'afford', 'age', 'agree', 'aid', 'aim', 'alarm', 'alert', 'alight', 'align', 'allay', 'allege', 'allot', 'allow', 'alloy', 'allure', 'ally', 'alter', 'amass', 'amaze', 'amble', 'ambush', 'amend', 'amount', 'amuse', 'anger', 'angle', 'anneal', 'annex', 'annoy', 'annul', 'anoint', 'answer', 'ape', 'appeal', 'appear', 'append', 'apply', 'arc', 'arch', 'argue', 'arise', 'arm', 'array', 'arrest', 'arrive', 'arrow', 'ascend', 'ask', 'aspire', 'assail', 'assay', 'assent', 'assert', 'assess', 'assign', 'assist', 'assort', 'assume', 'assure', 'atone', 'attach', 'attack', 'attain', 'attend', 'attest', 'attire', 'attune', 'audit', 'augur', 'author', 'avail', 'avenge', 'aver', 'avert', 'avoid', 'await', 'awake', 'awaken', 'award', 'awe', 'babble', 'back', 'badge', 'badger', 'baffle', 'bag', 'bail', 'bait', 'bake', 'bald', 'bale', 'ball', 'ballot', 'ban', 'band', 'bandy', 'bang', 'banish', 'bank', 'banter', 'bar', 'barb', 'barber', 'bard', 'bare', 'barge', 'bark', 'barn', 'barrel', 'barter', 'base', 'bash', 'bask', 'baste', 'bat', 'batch', 'bathe', 'batten', 'batter', 'battle', 'bawl', 'bay', 'be', 'beach', 'beacon', 'bead', 'beam', 'bean', 'bear', 'beard', 'beat', 'become', 'bed', 'beef', 'beep', 'beetle', 'befall', 'befit', 'beg', 'beget', 'beggar', 'begin', 'behave', 'behead', 'behold', 'belay', 'belch', 'belie', 'bell', 'bellow', 'belly', 'belong', 'belt', 'bemoan', 'bench', 'bend', 'berate', 'berry', 'beset', 'best', 'bestir', 'bestow', 'bet', 'betide', 'betray', 'better', 'bevel', 'bewail', 'beware', 'bias', 'bib', 'bicker', 'bid', 'bide', 'bilge', 'bill', 'billet', 'billow', 'bin', 'bind', 'birdie', 'birth', 'bisect', 'bit', 'bite', 'bitter', 'black', 'blame', 'blanch', 'blank', 'blare', 'blast', 'blaze', 'bleach', 'bleat', 'bleed', 'bleep', 'blench', 'blend', 'bless', 'blight', 'blind', 'blink', 'blip', 'bliss', 'blitz', 'bloat', 'blob', 'blood', 'bloody', 'bloom', 'blot', 'blotch', 'blow', 'blue', 'bluff', 'blunt', 'blur', 'blurb', 'blurt', 'blush', 'board', 'boast', 'bob', 'bode', 'body', 'bog', 'bogey', 'boggle', 'boil', 'bolt', 'bomb', 'bond', 'bone', 'bonnet', 'boo', 'book', 'boom', 'boost', 'boot', 'booze', 'bop', 'bore', 'borrow', 'boss', 'botch', 'bother', 'bottle', 'bottom', 'bounce', 'bound', 'bout', 'bow', 'bowel', 'bowl', 'box', 'brace', 'brag', 'braid', 'braise', 'brake', 'branch', 'brand', 'brave', 'brawl', 'bray', 'breach', 'bread', 'break', 'breed', 'breeze', 'brew', 'bribe', 'brick', 'bridge', 'bridle', 'brief', 'brim', 'brine', 'bring', 'broach', 'broil', 'bronze', 'brook', 'brown', 'browse', 'bruise', 'brush', 'bubble', 'buck', 'bucket', 'buckle', 'bud', 'budge', 'budget', 'buffet', 'bug', 'bugle', 'build', 'bulge', 'bulk', 'bull', 'bully', 'bumble', 'bump', 'bunch', 'bundle', 'bung', 'bungle', 'bunk', 'bunker', 'buoy', 'burble', 'burden', 'burgle', 'burn', 'burp', 'burr', 'burrow', 'burst', 'bury', 'bus', 'bush', 'busk', 'bust', 'bustle', 'busy', 'butt', 'button', 'buy', 'buzz', 'bypass', 'cab', 'cabal', 'cabin', 'cable', 'cache', 'cackle', 'cadge', 'cage', 'cajole', 'cake', 'call', 'calm', 'calve', 'camber', 'camp', 'can', 'canal', 'cancel', 'candle', 'candy', 'cane', 'cannon', 'canoe', 'canopy', 'cant', 'canter', 'cap', 'caper', 'card', 'care', 'career', 'caress', 'carol', 'carp', 'carpet', 'carry', 'cart', 'carve', 'case', 'cash', 'cast', 'castle', 'cat', 'catch', 'cater', 'caucus', 'cause', 'cave', 'cavern', 'cease', 'cede', 'cellar', 'cement', 'censor', 'chafe', 'chain', 'chair', 'chalk', 'champ', 'chance', 'change', 'chant', 'chap', 'char', 'charge', 'charm', 'chart', 'chase', 'chat', 'cheat', 'check', 'cheep', 'cheer', 'chew', 'chide', 'chill', 'chime', 'chin', 'chink', 'chip', 'chirp', 'chisel', 'chock', 'choir', 'choke', 'choose', 'chop', 'chord', 'chorus', 'chrome', 'chuck', 'chuff', 'chug', 'chum', 'chunk', 'churn', 'chute', 'cinder', 'cipher', 'circle', 'cite', 'clad', 'claim', 'clam', 'clamp', 'clang', 'clank', 'clap', 'clash', 'clasp', 'class', 'claw', 'clean', 'clear', 'cleat', 'cleave', 'clench', 'clerk', 'click', 'climax', 'climb', 'clinch', 'cling', 'clink', 'clip', 'clique', 'cloak', 'clock', 'clog', 'clone', 'close', 'closet', 'clot', 'cloud', 'clout', 'clown', 'club', 'cluck', 'clue', 'clump', 'clutch', 'coach', 'coal', 'coast', 'coat', 'coax', 'cobble', 'cobweb', 'cockle', 'cocoon', 'coddle', 'code', 'codify', 'coerce', 'coffer', 'coffin', 'cog', 'cohere', 'coil', 'coin', 'coke', 'collar', 'comb', 'combat', 'come', 'commit', 'compel', 'comply', 'con', 'concur', 'cone', 'confer', 'convey', 'convoy', 'cook', 'cool', 'cope', 'copper', 'copy', 'cord', 'cordon', 'core', 'cork', 'corn', 'corner', 'corral', 'cosset', 'cost', 'cotton', 'couch', 'cough', 'count', 'couple', 'course', 'court', 'cover', 'covet', 'cowl', 'cox', 'crab', 'crack', 'cradle', 'craft', 'cram', 'cramp', 'crane', 'crank', 'crash', 'crate', 'crater', 'crave', 'crawl', 'crayon', 'craze', 'creak', 'cream', 'crease', 'create', 'credit', 'creed', 'creep', 'crest', 'crew', 'crib', 'crick', 'crimp', 'cringe', 'crisp', 'croak', 'crook', 'croon', 'crop', 'cross', 'crouch', 'crowd', 'crown', 'cruise', 'crunch', 'crush', 'crust', 'crutch', 'cry', 'cube', 'cuckoo', 'cuddle', 'cudgel', 'cue', 'cuff', 'cull', 'cup', 'curb', 'curd', 'curdle', 'cure', 'curl', 'curry', 'curse', 'curve', 'cuss', 'cut', 'cycle', 'dab', 'dabble', 'dagger', 'dally', 'dam', 'damage', 'damn', 'damp', 'dampen', 'dance', 'dangle', 'dapple', 'dare', 'darken', 'darn', 'dart', 'dash', 'date', 'daub', 'daunt', 'dawdle', 'daze', 'dazzle', 'deaden', 'deafen', 'deal', 'debar', 'debase', 'debate', 'debit', 'debug', 'debut', 'decamp', 'decant', 'decay', 'decide', 'deck', 'decode', 'decoy', 'decree', 'decry', 'deduce', 'deduct', 'deem', 'deepen', 'deface', 'defame', 'defeat', 'defect', 'defend', 'defer', 'defile', 'define', 'deform', 'defray', 'defuse', 'defy', 'deify', 'deign', 'delay', 'delete', 'delude', 'deluge', 'delve', 'demand', 'demean', 'demise', 'demote', 'demur', 'den', 'denote', 'dent', 'denude', 'deny', 'depart', 'depend', 'depict', 'deploy', 'deport', 'depose', 'depute', 'derail', 'deride', 'derive', 'desert', 'design', 'desire', 'desist', 'detach', 'detail', 'detain', 'detect', 'deter', 'detest', 'detour', 'devil', 'devise', 'devote', 'devour', 'dial', 'diaper', 'dice', 'die', 'diet', 'differ', 'dig', 'digest', 'dilate', 'dilute', 'dim', 'dimple', 'din', 'dine', 'dint', 'dip', 'direct', 'disarm', 'disc', 'disco', 'dish', 'dismay', 'disown', 'dispel', 'disuse', 'ditch', 'dither', 'dive', 'divert', 'divest', 'divide', 'divine', 'dizzy', 'do', 'dock', 'docket', 'doctor', 'dodge', 'dog', 'dole', 'doll', 'dolly', 'dome', 'donate', 'doodle', 'doom', 'dope', 'dose', 'dot', 'dote', 'double', 'doubt', 'douse', 'dowel', 'down', 'dowse', 'doze', 'drab', 'draft', 'drag', 'drain', 'drape', 'draw', 'drawl', 'dray', 'dread', 'dream', 'dredge', 'drench', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drivel', 'drone', 'drool', 'droop', 'drop', 'drown', 'drowse', 'drudge', 'drug', 'drum', 'dry', 'dub', 'duck', 'duel', 'duet', 'dull', 'dumb', 'dummy', 'dump', 'dun', 'dupe', 'dust', 'dwarf', 'dwell', 'dye', 'ear', 'earn', 'ease', 'eat', 'ebb', 'echo', 'eddy', 'edge', 'edify', 'edit', 'efface', 'egg', 'egress', 'eject', 'elapse', 'elate', 'elbow', 'elect', 'elicit', 'elide', 'elope', 'elude', 'embalm', 'embark', 'embed', 'embody', 'emboss', 'emerge', 'emit', 'employ', 'empty', 'enable', 'enact', 'enamel', 'encamp', 'encase', 'encode', 'encore', 'end', 'endear', 'endow', 'endure', 'enfold', 'engage', 'engulf', 'enjoin', 'enjoy', 'enlist', 'enrage', 'enrich', 'ensue', 'ensure', 'entail', 'enter', 'entice', 'entomb', 'entrap', 'envy', 'equal', 'equate', 'equip', 'erase', 'erect', 'erode', 'err', 'erupt', 'escape', 'eschew', 'escort', 'escrow', 'essay', 'esteem', 'etch', 'evade', 'evict', 'evince', 'evoke', 'evolve', 'exact', 'exalt', 'exceed', 'excel', 'except', 'excess', 'excise', 'excite', 'excuse', 'exempt', 'exert', 'exeunt', 'exhale', 'exhort', 'exhume', 'exile', 'exist', 'expand', 'expect', 'expel', 'expend', 'expire', 'export', 'expose', 'extend', 'extol', 'extort', 'exude', 'exult', 'eye', 'fable', 'face', 'facet', 'factor', 'fade', 'fail', 'faint', 'fair', 'fake', 'fall', 'falter', 'fame', 'fan', 'fancy', 'farce', 'fare', 'farm', 'fast', 'fasten', 'fat', 'fate', 'father', 'fathom', 'fatten', 'fault', 'fawn', 'fear', 'feast', 'fee', 'feed', 'feel', 'feign', 'fell', 'fence', 'fend', 'ferret', 'ferry', 'fester', 'fetch', 'fettle', 'feud', 'fever', 'fib', 'fiddle', 'fidget', 'field', 'fife', 'fight', 'figure', 'file', 'fill', 'fillet', 'fillip', 'film', 'filter', 'fin', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'fish', 'fit', 'fitter', 'fix', 'fizz', 'fizzle', 'flack', 'flag', 'flail', 'flake', 'flame', 'flank', 'flap', 'flare', 'flash', 'flat', 'flaunt', 'flaw', 'flay', 'flee', 'fleece', 'fleet', 'flesh', 'flex', 'flick', 'flight', 'flinch', 'fling', 'flint', 'flip', 'flit', 'float', 'flock', 'flog', 'flood', 'floor', 'flop', 'floss', 'flour', 'flout', 'flow', 'flower', 'fluff', 'flurry', 'flush', 'flute', 'flux', 'fly', 'foal', 'foam', 'fob', 'focus', 'fodder', 'fog', 'foil', 'foist', 'fold', 'folio', 'follow', 'foment', 'fondle', 'fool', 'foot', 'forage', 'foray', 'forbid', 'force', 'ford', 'forego', 'forest', 'forge', 'forget', 'fork', 'form', 'format', 'foster', 'foul', 'found', 'fowl', 'fox', 'frame', 'frank', 'fray', 'freak', 'free', 'freeze', 'frenzy', 'fresh', 'fret', 'friend', 'fright', 'frill', 'fringe', 'frisk', 'frock', 'frog', 'frolic', 'front', 'frost', 'froth', 'frown', 'fruit', 'fry', 'fudge', 'fuel', 'full', 'fumble', 'fume', 'fun', 'fund', 'funk', 'funnel', 'fur', 'furrow', 'fuse', 'fuss', 'fuzz', 'gabble', 'gad', 'gaff', 'gag', 'gaggle', 'gain', 'gait', 'gall', 'gallop', 'gamble', 'gambol', 'game', 'gang', 'gap', 'gape', 'garage', 'garble', 'garden', 'gargle', 'garner', 'garter', 'gas', 'gash', 'gasp', 'gate', 'gather', 'gauge', 'gavel', 'gaze', 'gear', 'gel', 'gem', 'gender', 'gentle', 'get', 'ghost', 'gibber', 'gibbet', 'giddy', 'gift', 'gig', 'giggle', 'gimlet', 'gin', 'ginger', 'gird', 'girdle', 'girth', 'give', 'glad', 'glance', 'glare', 'glass', 'glaze', 'gleam', 'glean', 'glide', 'glint', 'gloat', 'globe', 'gloom', 'glory', 'gloss', 'glove', 'glow', 'glower', 'glue', 'glut', 'gnarl', 'gnash', 'gnaw', 'go', 'goad', 'gobble', 'golf', 'gong', 'goose', 'gore', 'gorge', 'gossip', 'gouge', 'govern', 'gown', 'grab', 'grace', 'grade', 'graft', 'grain', 'grant', 'graph', 'grasp', 'grass', 'grate', 'grave', 'gravel', 'graze', 'grease', 'green', 'greet', 'grey', 'grieve', 'grill', 'grin', 'grind', 'grip', 'gripe', 'grit', 'groan', 'groin', 'groom', 'groove', 'grope', 'gross', 'grouch', 'ground', 'group', 'grouse', 'grout', 'grovel', 'grow', 'growl', 'grub', 'grudge', 'grunt', 'guard', 'guess', 'guest', 'guffaw', 'guide', 'guilt', 'guise', 'gulf', 'gull', 'gully', 'gulp', 'gum', 'gun', 'gurgle', 'gush', 'gust', 'gut', 'gutter', 'guy', 'guzzle', 'gyrate', 'habit', 'hack', 'haft', 'haggle', 'hail', 'hale', 'hallo', 'halo', 'halt', 'halter', 'halve', 'ham', 'hammer', 'hamper', 'hand', 'handle', 'hang', 'hanker', 'happen', 'harass', 'harden', 'hark', 'harm', 'harp', 'harrow', 'harry', 'hash', 'hasp', 'hassle', 'haste', 'hasten', 'hat', 'hatch', 'hate', 'haul', 'haunt', 'have', 'haven', 'havoc', 'hawk', 'hay', 'hazard', 'haze', 'head', 'heal', 'heap', 'hear', 'heart', 'heat', 'heave', 'heckle', 'hector', 'hedge', 'heed', 'heel', 'heft', 'hell', 'hello', 'helm', 'help', 'hem', 'herald', 'herd', 'hew', 'hex', 'hiccup', 'hide', 'hijack', 'hike', 'hill', 'hilt', 'hinder', 'hinge', 'hint', 'hip', 'hiss', 'hit', 'hitch', 'hive', 'hoard', 'hoax', 'hob', 'hobble', 'hock', 'hoe', 'hog', 'hoist', 'hold', 'hole', 'hollow', 'home', 'hone', 'honey', 'honk', 'hood', 'hoof', 'hook', 'hoop', 'hoot', 'hop', 'hope', 'horde', 'horn', 'hose', 'host', 'hostel', 'hound', 'house', 'hovel', 'hover', 'howl', 'huddle', 'huff', 'hug', 'hulk', 'hull', 'hum', 'humble', 'humbug', 'hump', 'hunch', 'hunger', 'hunt', 'hurdle', 'hurl', 'hurrah', 'hurry', 'hurt', 'hurtle', 'hush', 'husk', 'hustle', 'hymn', 'hyphen', 'ice', 'id', 'idle', 'ignite', 'ignore', 'image', 'imbibe', 'imbue', 'imp', 'impact', 'impair', 'impale', 'impart', 'impede', 'impel', 'imply', 'import', 'impose', 'impugn', 'impute', 'inch', 'incite', 'incur', 'indent', 'index', 'indict', 'induce', 'induct', 'infect', 'infer', 'infest', 'infix', 'inform', 'infuse', 'ingest', 'inhale', 'inject', 'injure', 'ink', 'inlay', 'inlet', 'input', 'insert', 'inset', 'insist', 'insult', 'insure', 'intend', 'inter', 'intern', 'intone', 'inure', 'invade', 'invent', 'invert', 'invest', 'invite', 'invoke', 'ionize', 'iris', 'iron', 'island', 'isle', 'issue', 'itch', 'item', 'jab', 'jabber', 'jack', 'jade', 'jag', 'jail', 'jam', 'jangle', 'jape', 'jar', 'jargon', 'jaunt', 'jaw', 'jazz', 'jeer', 'jelly', 'jerk', 'jest', 'jet', 'jetty', 'jewel', 'jib', 'jibe', 'jig', 'jigsaw', 'jilt', 'jingle', 'jinx', 'jitter', 'jive', 'job', 'jockey', 'jog', 'join', 'joint', 'joke', 'jolly', 'jolt', 'jostle', 'jot', 'joust', 'joy', 'judge', 'jug', 'juggle', 'juice', 'jumble', 'jump', 'junk', 'junket', 'just', 'jut', 'kayak', 'keel', 'keen', 'keep', 'ken', 'kennel', 'kernel', 'key', 'kick', 'kid', 'kidnap', 'kill', 'kiln', 'kilt', 'kindle', 'king', 'kink', 'kipper', 'kiss', 'kit', 'kite', 'kitten', 'knead', 'knee', 'kneel', 'knell', 'knife', 'knight', 'knit', 'knock', 'knoll', 'knot', 'know', 'kosher', 'kowtow', 'laager', 'label', 'lace', 'lack', 'lackey', 'ladle', 'lag', 'lame', 'lament', 'lance', 'land', 'lap', 'lapse', 'lard', 'lark', 'lash', 'lasso', 'last', 'latch', 'lathe', 'lather', 'laud', 'laugh', 'launch', 'laurel', 'lavish', 'law', 'lay', 'layer', 'laze', 'lazy', 'leach', 'lead', 'leaf', 'league', 'leak', 'lean', 'leap', 'learn', 'lease', 'leash', 'leave', 'leaven', 'lecher', 'leech', 'leer', 'leg', 'lend', 'lesion', 'lessen', 'lesson', 'let', 'letter', 'level', 'lever', 'levy', 'libel', 'lichen', 'lick', 'lid', 'lie', 'lift', 'light', 'like', 'liken', 'lilt', 'limb', 'limber', 'lime', 'limit', 'limp', 'line', 'linger', 'link', 'lip', 'liquor', 'lisp', 'list', 'listen', 'litter', 'live', 'liven', 'load', 'loaf', 'loam', 'loan', 'loathe', 'lob', 'lobby', 'local', 'locate', 'lock', 'lodge', 'loft', 'log', 'loiter', 'loll', 'long', 'look', 'loom', 'loop', 'loose', 'loosen', 'loot', 'lop', 'lope', 'lord', 'lose', 'lot', 'loth', 'lounge', 'louse', 'lout', 'love', 'lower', 'luck', 'lug', 'lull', 'lumber', 'lump', 'lunch', 'lunge', 'lurch', 'lure', 'lurk', 'lust', 'lute', 'lynch', 'mace', 'mad', 'madden', 'mail', 'maim', 'major', 'make', 'malign', 'malt', 'man', 'manage', 'mangle', 'mantle', 'manure', 'map', 'mar', 'marble', 'march', 'margin', 'mark', 'market', 'marl', 'maroon', 'marry', 'martyr', 'marvel', 'mash', 'mask', 'mason', 'mass', 'mast', 'master', 'mat', 'match', 'mate', 'matte', 'matter', 'mature', 'maul', 'maze', 'mean', 'medal', 'meddle', 'meet', 'meld', 'mellow', 'melt', 'menace', 'mend', 'mentor', 'merge', 'merit', 'mesh', 'mess', 'metal', 'meter', 'mew', 'mildew', 'milk', 'mill', 'mimic', 'mince', 'mind', 'mine', 'mingle', 'minor', 'mint', 'minute', 'mire', 'mirror', 'miscue', 'misfit', 'mislay', 'miss', 'mist', 'misuse', 'mitre', 'mix', 'moan', 'mob', 'mock', 'model', 'modem', 'modify', 'molest', 'molten', 'monger', 'monkey', 'moon', 'moor', 'moot', 'mop', 'mope', 'morph', 'morsel', 'mortar', 'mosaic', 'moss', 'mother', 'motion', 'motive', 'motor', 'mould', 'mound', 'mount', 'mourn', 'mouse', 'mousse', 'mouth', 'move', 'mow', 'muck', 'mud', 'muddle', 'muddy', 'muff', 'muffle', 'mug', 'mulch', 'mull', 'mumble', 'mummy', 'munch', 'murder', 'murmur', 'muscle', 'muse', 'mush', 'must', 'muster', 'mutate', 'mute', 'mutiny', 'mutter', 'muzzle', 'nag', 'nail', 'name', 'nap', 'narrow', 'near', 'neaten', 'neck', 'need', 'needle', 'negate', 'neigh', 'nerve', 'nest', 'nestle', 'net', 'nettle', 'neuter', 'nibble', 'niche', 'nick', 'nickel', 'niggle', 'nigh', 'nip', 'nod', 'noise', 'noodle', 'noose', 'nose', 'notch', 'note', 'notice', 'notify', 'nudge', 'null', 'numb', 'number', 'nurse', 'nut', 'nuzzle', 'oar', 'obey', 'object', 'oblige', 'obtain', 'occult', 'occupy', 'occur', 'off', 'offend', 'offer', 'ogle', 'oh', 'oil', 'omen', 'omit', 'ooze', 'open', 'opiate', 'oppose', 'opt', 'option', 'orb', 'orbit', 'ordain', 'order', 'orient', 'orphan', 'oust', 'out', 'outbid', 'outdo', 'outfit', 'outlaw', 'outlay', 'output', 'outrun', 'outwit', 'over', 'overdo', 'owe', 'own', 'oyster', 'pace', 'pacify', 'pack', 'packet', 'pad', 'paddle', 'page', 'pain', 'paint', 'pair', 'pal', 'pale', 'pall', 'pallet', 'palm', 'palsy', 'pamper', 'pan', 'pander', 'panel', 'panic', 'pant', 'paper', 'par', 'parade', 'parcel', 'parch', 'pardon', 'pare', 'parent', 'park', 'parley', 'parody', 'parole', 'parrot', 'parry', 'parse', 'part', 'party', 'pass', 'paste', 'pastor', 'pat', 'patch', 'patent', 'patrol', 'patter', 'pause', 'pave', 'paw', 'pawn', 'pay', 'peace', 'peach', 'peak', 'peal', 'pearl', 'pebble', 'peck', 'pedal', 'peddle', 'peek', 'peel', 'peep', 'peer', 'peg', 'pellet', 'pelt', 'pen', 'pencil', 'people', 'pepper', 'perch', 'peril', 'perish', 'perk', 'perm', 'permit', 'peruse', 'pester', 'pestle', 'pet', 'phase', 'phone', 'phrase', 'pi', 'pick', 'picket', 'pickle', 'picnic', 'pie', 'piece', 'pierce', 'piffle', 'pig', 'pike', 'pile', 'pilfer', 'pill', 'pillar', 'pillow', 'pilot', 'pimp', 'pin', 'pinch', 'pine', 'ping', 'pinion', 'pink', 'pip', 'pipe', 'pique', 'pirate', 'pistol', 'pit', 'pitch', 'pith', 'pity', 'pivot', 'place', 'plague', 'plait', 'plan', 'plane', 'plank', 'plant', 'plat', 'plate', 'play', 'plead', 'please', 'pleat', 'pledge', 'plight', 'plod', 'plop', 'plot', 'plough', 'pluck', 'plug', 'plumb', 'plume', 'plump', 'plunge', 'ply', 'poach', 'pocket', 'pod', 'point', 'poise', 'poison', 'poke', 'pole', 'police', 'polish', 'polka', 'poll', 'pollen', 'pomade', 'pond', 'ponder', 'pony', 'pool', 'pop', 'pore', 'port', 'pose', 'posit', 'post', 'pot', 'potter', 'pouch', 'pounce', 'pound', 'pour', 'pout', 'powder', 'power', 'praise', 'prance', 'prank', 'prawn', 'pray', 'preach', 'preen', 'prefab', 'prefix', 'preset', 'press', 'pretty', 'prey', 'price', 'prick', 'pride', 'priest', 'prim', 'prime', 'print', 'prize', 'probe', 'prod', 'profit', 'prompt', 'prong', 'proof', 'prop', 'propel', 'prose', 'prove', 'prowl', 'prune', 'pry', 'pucker', 'puddle', 'puff', 'pug', 'puke', 'pull', 'pulp', 'pulse', 'pumice', 'pummel', 'pump', 'pun', 'punch', 'punish', 'punt', 'pup', 'purge', 'purify', 'purl', 'purple', 'purr', 'purse', 'pursue', 'push', 'put', 'putt', 'putter', 'putty', 'puzzle', 'quack', 'quaff', 'quake', 'quarry', 'quash', 'quaver', 'queen', 'queer', 'quell', 'quench', 'query', 'quest', 'queue', 'quiet', 'quill', 'quilt', 'quip', 'quit', 'quiver', 'quiz', 'quote', 'rabble', 'race', 'rack', 'racket', 'radio', 'raffle', 'raft', 'rag', 'rage', 'raid', 'rail', 'rain', 'raise', 'rake', 'rally', 'ram', 'ramble', 'ramify', 'ramp', 'ramrod', 'ranch', 'range', 'rank', 'rankle', 'ransom', 'rant', 'rap', 'rasp', 'rat', 'rate', 'ratify', 'ration', 'rattle', 'ravage', 'rave', 'ravel', 'raven', 'ravish', 'ray', 'raze', 'reach', 'react', 'read', 'ready', 'really', 'ream', 'reap', 'rear', 'reason', 'rebate', 'rebel', 'rebind', 'rebook', 'rebuff', 'rebuke', 'rebut', 'recall', 'recant', 'recap', 'recast', 'recede', 'recess', 'recite', 'reckon', 'recode', 'recoil', 'record', 'recur', 'redden', 'redeem', 'redial', 'redo', 'redraw', 'reduce', 'reed', 'reef', 'reek', 'reel', 'reeve', 'refer', 'refile', 'refill', 'refine', 'refit', 'reflex', 'reform', 'refuel', 'refuge', 'refund', 'refuse', 'refute', 'regain', 'regale', 'regard', 'regret', 'rehash', 'reheat', 'reify', 'reign', 'reject', 'rejoin', 'relate', 'relax', 'relay', 'relent', 'relink', 'relish', 'relive', 'rely', 'remain', 'remake', 'remand', 'remap', 'remark', 'remedy', 'remind', 'remit', 'remove', 'rename', 'rend', 'render', 'renege', 'renew', 'rent', 'reopen', 'repack', 'repair', 'repast', 'repay', 'repeal', 'repeat', 'repel', 'repent', 'repine', 'replay', 'reply', 'report', 'repose', 'repute', 'reread', 'rerun', 'rescue', 'resell', 'resend', 'resent', 'reset', 'reshow', 'reside', 'resign', 'resin', 'resist', 'resit', 'resort', 'rest', 'result', 'resume', 'retail', 'retain', 'retake', 'retard', 'retch', 'retell', 'retest', 'retire', 'retort', 'retry', 'retune', 'return', 'retype', 'reuse', 'revamp', 'reveal', 'revel', 'revere', 'revert', 'review', 'revile', 'revive', 'revoke', 'revolt', 'reward', 'rewind', 'reword', 'rework', 'rhyme', 'rib', 'ribbon', 'rice', 'rid', 'riddle', 'ride', 'ridge', 'riff', 'rifle', 'rift', 'rig', 'right', 'rim', 'rime', 'ring', 'rinse', 'riot', 'rip', 'ripen', 'ripple', 'rise', 'risk', 'rival', 'rivet', 'roach', 'roam', 'roar', 'roast', 'rob', 'robe', 'rock', 'rocket', 'rogue', 'roll', 'romp', 'roof', 'rook', 'room', 'roost', 'root', 'rope', 'rosin', 'rot', 'rotate', 'rouge', 'rough', 'round', 'rouse', 'rout', 'route', 'rove', 'row', 'rub', 'ruck', 'rue', 'ruff', 'ruffle', 'ruin', 'rule', 'rumble', 'rumple', 'run', 'rush', 'rust', 'rustle', 'rut', 'sack', 'sadden', 'saddle', 'safari', 'sag', 'sail', 'saint', 'sallow', 'salt', 'salute', 'sample', 'sand', 'sandal', 'sap', 'sash', 'sauce', 'sauna', 'savage', 'save', 'saw', 'say', 'scab', 'scald', 'scale', 'scalp', 'scan', 'scant', 'scape', 'scar', 'scare', 'scarf', 'scathe', 'scent', 'scheme', 'school', 'scoff', 'scold', 'scoop', 'scoot', 'scope', 'scorch', 'score', 'scorn', 'scotch', 'scour', 'scout', 'scowl', 'scrap', 'scrape', 'scrawl', 'scream', 'screen', 'screw', 'scribe', 'script', 'scroll', 'scrub', 'scrum', 'scuba', 'scud', 'scuff', 'scull', 'sculpt', 'scum', 'scurry', 'scythe', 'seal', 'seam', 'sear', 'search', 'season', 'seat', 'secede', 'second', 'sector', 'secure', 'sedate', 'seduce', 'see', 'seed', 'seek', 'seem', 'seep', 'seethe', 'seize', 'select', 'sell', 'send', 'sense', 'serge', 'serve', 'set', 'settle', 'sever', 'sew', 'shack', 'shade', 'shadow', 'shaft', 'shag', 'shake', 'sham', 'shame', 'shank', 'shape', 'share', 'shark', 'sharp', 'shave', 'shear', 'shed', 'sheer', 'shell', 'shelve', 'shield', 'shift', 'shin', 'shine', 'ship', 'shirk', 'shiver', 'shoal', 'shock', 'shoe', 'shoo', 'shoot', 'shop', 'short', 'shot', 'shout', 'shove', 'shovel', 'show', 'shower', 'shred', 'shriek', 'shrill', 'shrimp', 'shrine', 'shrink', 'shroud', 'shrug', 'shun', 'shunt', 'shut', 'shy', 'sicken', 'sickly', 'side', 'sidle', 'siege', 'sieve', 'sift', 'sigh', 'sight', 'sign', 'signal', 'signet', 'silk', 'silo', 'silt', 'silver', 'simmer', 'simper', 'simple', 'sin', 'sinew', 'sing', 'single', 'sink', 'sip', 'siphon', 'sire', 'sit', 'site', 'size', 'sizzle', 'skate', 'sketch', 'skew', 'skewer', 'ski', 'skid', 'skim', 'skimp', 'skin', 'skip', 'skirl', 'skirt', 'skulk', 'skunk', 'sky', 'slab', 'slack', 'slag', 'slake', 'slam', 'slang', 'slant', 'slap', 'slash', 'slat', 'slate', 'slave', 'slaver', 'slay', 'sleaze', 'sled', 'sledge', 'sleek', 'sleep', 'sleet', 'sleeve', 'sleigh', 'sleuth', 'slice', 'slick', 'slide', 'slight', 'slim', 'slime', 'sling', 'slink', 'slip', 'slit', 'sliver', 'slog', 'slop', 'slope', 'slosh', 'slot', 'slouch', 'slough', 'slow', 'slug', 'sluice', 'slum', 'slump', 'slur', 'slurp', 'slurry', 'slush', 'smack', 'smart', 'smash', 'smear', 'smell', 'smelt', 'smile', 'smirk', 'smite', 'smock', 'smoke', 'smooth', 'smudge', 'smut', 'snack', 'snag', 'snake', 'snap', 'snare', 'snarl', 'snatch', 'sneak', 'sneer', 'sneeze', 'snick', 'sniff', 'snip', 'snipe', 'snivel', 'snoop', 'snooze', 'snore', 'snort', 'snow', 'snub', 'snuff', 'snug', 'soak', 'soap', 'soar', 'sob', 'sober', 'sock', 'socket', 'sodden', 'soften', 'soil', 'solace', 'solder', 'sole', 'solo', 'solve', 'soot', 'soothe', 'sop', 'sorrow', 'sort', 'sortie', 'sound', 'soup', 'sour', 'source', 'south', 'sow', 'space', 'spade', 'span', 'spank', 'spar', 'spare', 'spark', 'spat', 'spawn', 'speak', 'spear', 'speck', 'speed', 'spell', 'spend', 'spew', 'sphere', 'spice', 'spike', 'spill', 'spin', 'spiral', 'spire', 'spirit', 'spit', 'spite', 'splash', 'splice', 'splint', 'split', 'spoil', 'spoke', 'sponge', 'spoof', 'spool', 'spoon', 'spoor', 'spore', 'sport', 'spot', 'spout', 'sprain', 'sprawl', 'spray', 'spread', 'sprig', 'spring', 'sprint', 'sprout', 'spruce', 'spud', 'spume', 'spur', 'spurn', 'spurt', 'spy', 'squad', 'squall', 'square', 'squash', 'squat', 'squawk', 'squeak', 'squeal', 'squib', 'squint', 'squire', 'squirm', 'squirt', 'stab', 'stable', 'stack', 'staff', 'stag', 'stage', 'stain', 'stake', 'stale', 'stalk', 'stall', 'stamp', 'stand', 'staple', 'star', 'starch', 'stare', 'start', 'starve', 'state', 'stave', 'stay', 'stead', 'steal', 'steam', 'steel', 'steep', 'steer', 'stem', 'step', 'stet', 'stew', 'stick', 'stiff', 'stifle', 'still', 'stilt', 'sting', 'stink', 'stint', 'stir', 'stitch', 'stock', 'stomp', 'stone', 'stooge', 'stool', 'stoop', 'stop', 'store', 'storm', 'story', 'stow', 'strafe', 'strain', 'strand', 'strap', 'stray', 'streak', 'stream', 'stress', 'strew', 'stride', 'strike', 'string', 'strip', 'stripe', 'strive', 'stroke', 'stroll', 'strop', 'strum', 'strut', 'stub', 'stucco', 'stud', 'study', 'stuff', 'stump', 'stun', 'stunt', 'sturdy', 'sty', 'style', 'stymie', 'subdue', 'submit', 'suck', 'sucker', 'suckle', 'suds', 'sue', 'suede', 'suffer', 'suffix', 'sugar', 'suit', 'sulk', 'sully', 'sum', 'summer', 'summit', 'summon', 'sun', 'suntan', 'sup', 'supple', 'supply', 'surf', 'surge', 'survey', 'suture', 'swab', 'swamp', 'swap', 'swarm', 'swat', 'swathe', 'sway', 'swear', 'sweat', 'sweep', 'swell', 'swerve', 'swill', 'swim', 'swing', 'swipe', 'swirl', 'swish', 'switch', 'swivel', 'swoon', 'swoop', 'swop', 'symbol', 'syrup', 'tab', 'tabby', 'table', 'taboo', 'tack', 'tackle', 'tag', 'tail', 'tailor', 'taint', 'take', 'talk', 'tallow', 'tally', 'tame', 'tamp', 'tamper', 'tan', 'tangle', 'tango', 'tank', 'tap', 'tape', 'taper', 'tar', 'target', 'tariff', 'tarry', 'tart', 'task', 'tassel', 'taste', 'tattle', 'tattoo', 'taunt', 'tax', 'taxi', 'teach', 'team', 'tear', 'tease', 'tee', 'teem', 'teeter', 'teethe', 'telex', 'tell', 'temper', 'tempt', 'tenant', 'tend', 'tender', 'tenon', 'tense', 'tent', 'tenure', 'term', 'test', 'tether', 'thank', 'thatch', 'thaw', 'thieve', 'thin', 'think', 'thirst', 'thorn', 'thou', 'thrall', 'thrash', 'thread', 'threat', 'thresh', 'thrill', 'thrive', 'throat', 'throb', 'throne', 'throng', 'throw', 'thrum', 'thrust', 'thud', 'thumb', 'thump', 'thwack', 'thwart', 'tick', 'ticket', 'tickle', 'tide', 'tidy', 'tie', 'tier', 'tile', 'till', 'tiller', 'tilt', 'timber', 'time', 'tin', 'tinge', 'tingle', 'tinker', 'tinkle', 'tinsel', 'tint', 'tip', 'tipple', 'tiptoe', 'tire', 'tissue', 'tithe', 'title', 'titter', 'toady', 'toast', 'toddle', 'toe', 'toggle', 'toil', 'token', 'toll', 'tomb', 'tomcat', 'tone', 'tongue', 'tool', 'toot', 'tooth', 'tootle', 'top', 'topple', 'torch', 'torque', 'toss', 'tot', 'total', 'totter', 'touch', 'tough', 'tour', 'tout', 'tow', 'towel', 'tower', 'toy', 'trace', 'track', 'trade', 'trail', 'train', 'tram', 'tramp', 'trance', 'trap', 'trash', 'travel', 'trawl', 'tread', 'treat', 'treble', 'tree', 'trek', 'trench', 'trend', 'triage', 'trice', 'trick', 'trill', 'trim', 'trip', 'triple', 'troll', 'troop', 'trot', 'troupe', 'trowel', 'truant', 'truck', 'trudge', 'true', 'truss', 'trust', 'try', 'tub', 'tube', 'tuck', 'tucker', 'tuft', 'tug', 'tumble', 'tun', 'tune', 'tunnel', 'turf', 'turn', 'turtle', 'tusk', 'tussle', 'tutor', 'twang', 'tweak', 'tweet', 'twig', 'twill', 'twin', 'twine', 'twinge', 'twirl', 'twist', 'twitch', 'type', 'typify', 'umpire', 'unable', 'unbend', 'unbolt', 'unclog', 'uncoil', 'undo', 'unfit', 'unfold', 'unfurl', 'unhand', 'unify', 'unite', 'unjam', 'unlace', 'unlink', 'unload', 'unlock', 'unmask', 'unpack', 'unpick', 'unplug', 'unroll', 'unseal', 'unseat', 'untie', 'unveil', 'unwind', 'unwrap', 'unzip', 'up', 'update', 'uphold', 'uplift', 'upload', 'uproot', 'upset', 'upturn', 'urge', 'use', 'usher', 'usurp', 'utter', 'vacate', 'vacuum', 'valet', 'value', 'valve', 'vamp', 'vanish', 'vary', 'vat', 'vault', 'vector', 'veer', 'veil', 'vein', 'vend', 'veneer', 'vent', 'verge', 'verify', 'verse', 'vest', 'vet', 'veto', 'vex', 'vial', 'vice', 'video', 'vie', 'view', 'vilify', 'visa', 'vision', 'visit', 'visor', 'voice', 'void', 'volley', 'vomit', 'voodoo', 'vote', 'vouch', 'vow', 'voyage', 'wad', 'waddle', 'wade', 'wafer', 'waffle', 'waft', 'wag', 'wager', 'waggle', 'wagon', 'wail', 'wait', 'waive', 'wake', 'waken', 'walk', 'wall', 'wallow', 'waltz', 'wan', 'wander', 'wane', 'want', 'wanton', 'war', 'warble', 'ward', 'warm', 'warn', 'warp', 'wash', 'waste', 'watch', 'water', 'wattle', 'wave', 'waver', 'wax', 'waylay', 'weaken', 'wean', 'weapon', 'wear', 'weary', 'weasel', 'weave', 'web', 'wed', 'wedge', 'weed', 'weep', 'weigh', 'weight', 'weld', 'well', 'welt', 'welter', 'wench', 'wend', 'wet', 'whack', 'whale', 'wharf', 'wheel', 'wheeze', 'whelp', 'whet', 'whiff', 'while', 'whine', 'whinny', 'whip', 'whir', 'whirl', 'whirr', 'whisk', 'white', 'whiten', 'whizz', 'whoop', 'whoosh', 'wick', 'widen', 'widow', 'wield', 'wig', 'wiggle', 'wild', 'wile', 'will', 'wilt', 'wimple', 'win', 'wince', 'winch', 'wind', 'window', 'wine', 'wing', 'wink', 'winnow', 'winter', 'wipe', 'wire', 'wish', 'wisp', 'wit', 'witch', 'wither', 'wobble', 'wolf', 'wonder', 'wont', 'woo', 'wood', 'word', 'work', 'worm', 'worry', 'worsen', 'worst', 'wound', 'wow', 'wrack', 'wrap', 'wreak', 'wreath', 'wreck', 'wrench', 'wrest', 'wring', 'write', 'writhe', 'wrong', 'x-ray', 'xerox', 'yacht', 'yak', 'yap', 'yard', 'yaw', 'yawn', 'yearn', 'yeast', 'yell', 'yellow', 'yelp', 'yen', 'yes', 'yield', 'yo-yo', 'yodel', 'yoke', 'zero', 'zigzag', 'zinc', 'zip', 'zipper', 'zone', 'zoom'\r\n]\r\nexport const nouns = [\r\n    'abacus', 'abbey', 'abroad', 'abuse', 'access', 'acid', 'act', 'action', 'actor', 'ad', 'adult', 'advice', 'affair', 'affect', 'age', 'agency', 'agenda', 'agent', 'aglet', 'aid', 'air', 'airbag', 'airbus', 'alarm', 'alb', 'alcove', 'alder', 'alibi', 'alley', 'alloy', 'almond', 'alpaca', 'alpha', 'alto', 'amount', 'analog', 'anger', 'angle', 'angora', 'animal', 'anime', 'ankle', 'anklet', 'annual', 'anorak', 'answer', 'ant', 'antler', 'ape', 'appeal', 'apple', 'apron', 'apse', 'arch', 'archer', 'area', 'arm', 'armor', 'army', 'arrow', 'art', 'ascot', 'ash', 'ashram', 'aside', 'ask', 'aspect', 'assist', 'atom', 'atrium', 'attack', 'attic', 'aunt', 'author', 'avenue', 'award', 'babe', 'baboon', 'baby', 'back', 'bacon', 'bad', 'badge', 'badger', 'bag', 'bagel', 'bail', 'bait', 'bake', 'baker', 'bakery', 'ball', 'ballet', 'bamboo', 'banana', 'band', 'bangle', 'banjo', 'bank', 'banker', 'baobab', 'bar', 'barber', 'barge', 'barium', 'barn', 'base', 'basin', 'basis', 'basket', 'bass', 'bat', 'bath', 'bather', 'batter', 'battle', 'bay', 'bayou', 'beach', 'bead', 'beak', 'beam', 'bean', 'beanie', 'bear', 'beard', 'beast', 'beat', 'beauty', 'beaver', 'bed', 'bee', 'beech', 'beef', 'beer', 'beet', 'beetle', 'beggar', 'behest', 'being', 'belfry', 'belief', 'bell', 'belly', 'belt', 'bench', 'bend', 'bengal', 'beret', 'berry', 'bet', 'beyond', 'bid', 'bidet', 'big', 'bijou', 'bike', 'bikini', 'bill', 'bin', 'birch', 'bird', 'birth', 'bit', 'bite', 'bitter', 'black', 'blade', 'blame', 'blank', 'blazer', 'blight', 'blind', 'block', 'blood', 'bloom', 'blouse', 'blow', 'blue', 'boar', 'board', 'boat', 'bobcat', 'body', 'bog', 'bolero', 'bolt', 'bomb', 'bomber', 'bone', 'bongo', 'bonnet', 'bonsai', 'bonus', 'book', 'boot', 'bootee', 'bootie', 'boots', 'booty', 'border', 'bore', 'bosom', 'boss', 'botany', 'bother', 'bottle', 'bottom', 'bough', 'bow', 'bower', 'bowl', 'bowler', 'bowtie', 'box', 'boxer', 'boy', 'bra', 'brace', 'brain', 'brake', 'branch', 'brand', 'brandy', 'brass', 'brave', 'bread', 'break', 'breast', 'breath', 'breeze', 'brick', 'bridge', 'brief', 'briefs', 'broad', 'broker', 'brome', 'bronco', 'bronze', 'brooch', 'brood', 'brook', 'broom', 'brow', 'brown', 'brush', 'bubble', 'bucket', 'buckle', 'bud', 'buddy', 'budget', 'buffer', 'buffet', 'bug', 'buggy', 'bugle', 'bulb', 'bull', 'bullet', 'bumper', 'bun', 'bunch', 'burn', 'burst', 'bus', 'bush', 'bust', 'bustle', 'butane', 'butter', 'button', 'buy', 'buyer', 'cabana', 'cabin', 'cable', 'cacao', 'cactus', 'caddy', 'cadet', 'cafe', 'caftan', 'cake', 'calf', 'calico', 'call', 'calm', 'camel', 'cameo', 'camera', 'camp', 'can', 'canal', 'cancel', 'cancer', 'candle', 'candy', 'cane', 'cannon', 'canoe', 'canon', 'canopy', 'canvas', 'cap', 'cape', 'capon', 'car', 'carbon', 'card', 'care', 'career', 'cargo', 'carol', 'carp', 'carpet', 'carrot', 'carry', 'cart', 'case', 'cash', 'casino', 'cast', 'castle', 'cat', 'catch', 'catsup', 'cattle', 'cause', 'cave', 'cd', 'celery', 'cell', 'cellar', 'cello', 'cement', 'census', 'cent', 'center', 'cereal', 'chafe', 'chain', 'chair', 'chaise', 'chalet', 'chalk', 'chance', 'change', 'chaos', 'chap', 'chapel', 'chard', 'charge', 'charm', 'chart', 'check', 'cheek', 'chef', 'cheque', 'cherry', 'chess', 'chest', 'chick', 'chief', 'child', 'chill', 'chime', 'chin', 'chino', 'chip', 'chive', 'choice', 'choker', 'chop', 'chord', 'chrome', 'chub', 'chug', 'church', 'churn', 'cicada', 'cinema', 'circle', 'cirrus', 'city', 'claim', 'clam', 'clank', 'clasp', 'class', 'clause', 'clave', 'cleat', 'clef', 'cleric', 'clerk', 'click', 'client', 'cliff', 'climb', 'clip', 'cloak', 'clock', 'clogs', 'close', 'closet', 'cloth', 'cloud', 'cloudy', 'clove', 'clover', 'club', 'clue', 'clutch', 'coach', 'coal', 'coast', 'coat', 'cob', 'cobweb', 'cocoa', 'cod', 'code', 'codon', 'coffee', 'coffin', 'coil', 'coin', 'coke', 'cold', 'collar', 'colon', 'colony', 'color', 'colt', 'column', 'comb', 'combat', 'comic', 'comma', 'common', 'condor', 'cone', 'conga', 'congo', 'consul', 'cook', 'cookie', 'cope', 'copper', 'copy', 'cord', 'cork', 'corn', 'corner', 'cornet', 'corral', 'cost', 'cot', 'cotton', 'couch', 'cougar', 'cough', 'count', 'county', 'couple', 'course', 'court', 'cousin', 'cover', 'cow', 'cowboy', 'crab', 'crack', 'cradle', 'craft', 'crash', 'crate', 'cravat', 'craw', 'crayon', 'crazy', 'cream', 'creche', 'credit', 'creek', 'crest', 'crew', 'crib', 'crime', 'crocus', 'crook', 'crop', 'cross', 'crotch', 'croup', 'crow', 'crowd', 'crown', 'crude', 'crush', 'cry', 'cub', 'cuckoo', 'cup', 'cupola', 'curio', 'curl', 'curler', 'cursor', 'curve', 'cut', 'cutlet', 'cycle', 'cymbal', 'cynic', 'cyst', 'dad', 'dagger', 'dahlia', 'daisy', 'damage', 'dame', 'dance', 'dancer', 'danger', 'daniel', 'dare', 'dark', 'dart', 'dash', 'data', 'date', 'david', 'day', 'daybed', 'dead', 'deal', 'dealer', 'dear', 'death', 'debate', 'debt', 'debtor', 'decade', 'deck', 'deep', 'deer', 'degree', 'delay', 'delete', 'demand', 'demur', 'den', 'denim', 'depth', 'deputy', 'derby', 'desert', 'design', 'desire', 'desk', 'detail', 'device', 'devil', 'dew', 'dhow', 'diadem', 'dibble', 'dickey', 'diet', 'dig', 'digger', 'dill', 'dime', 'dimple', 'diner', 'dinghy', 'dinner', 'dirndl', 'dirt', 'disco', 'dish', 'dishes', 'disk', 'divan', 'diver', 'divide', 'diving', 'dock', 'doctor', 'doe', 'dog', 'doll', 'dollar', 'dolman', 'domain', 'donkey', 'door', 'dory', 'dot', 'double', 'doubt', 'draft', 'drag', 'dragon', 'drain', 'drake', 'drama', 'draw', 'drawer', 'dream', 'dress', 'drill', 'drink', 'drive', 'driver', 'drop', 'drug', 'drum', 'drunk', 'dry', 'dryer', 'duck', 'dud', 'due', 'duffel', 'dugout', 'dump', 'dust', 'duster', 'duty', 'dwarf', 'dynamo', 'eagle', 'ear', 'earth', 'ease', 'easel', 'east', 'eat', 'eave', 'e-book', 'eddy', 'edge', 'edger', 'editor', 'edward', 'eel', 'effect', 'effort', 'egg', 'eggnog', 'eight', 'elbow', 'elixir', 'elk', 'elm', 'emery', 'employ', 'emu', 'end', 'enemy', 'energy', 'engine', 'enigma', 'entry', 'envy', 'epee', 'epoch', 'eponym', 'epoxy', 'equal', 'era', 'error', 'escape', 'ese', 'essay', 'estate', 'ethics', 'europe', 'event', 'exam', 'excuse', 'exile', 'exit', 'expert', 'extent', 'eye', 'eyelid', 'face', 'facet', 'fact', 'factor', 'fail', 'fairy', 'faith', 'fall', 'fame', 'family', 'fan', 'fang', 'fanny', 'farm', 'farmer', 'fascia', 'fat', 'father', 'faucet', 'fault', 'fawn', 'fax', 'fear', 'feast', 'fedora', 'fee', 'feed', 'feel', 'feet', 'felony', 'female', 'fen', 'fence', 'fender', 'ferry', 'few', 'fiber', 'fibre', 'fiddle', 'field', 'fifth', 'fight', 'figure', 'file', 'fill', 'filly', 'film', 'filth', 'final', 'find', 'fine', 'finger', 'finish', 'fir', 'fire', 'fish', 'fix', 'flag', 'flame', 'flare', 'flash', 'flat', 'flavor', 'flax', 'fleck', 'fleece', 'flesh', 'flight', 'flock', 'flood', 'floor', 'flour', 'flow', 'flower', 'flu', 'fluke', 'flute', 'fly', 'foam', 'fob', 'focus', 'fog', 'fold', 'folder', 'fondue', 'font', 'food', 'foot', 'foray', 'force', 'forest', 'fork', 'form', 'formal', 'format', 'former', 'fort', 'forum', 'fowl', 'fox', 'frame', 'freeze', 'freon', 'fresco', 'fridge', 'friend', 'fringe', 'frock', 'frog', 'front', 'frost', 'frown', 'fruit', 'fuel', 'full', 'fun', 'funny', 'fur', 'futon', 'future', 'gaffer', 'gain', 'gale', 'galley', 'gallon', 'galn', 'game', 'gander', 'gap', 'garage', 'garb', 'garden', 'garlic', 'garter', 'gas', 'gate', 'gather', 'gauge', 'gazebo', 'gear', 'geese', 'gem', 'gender', 'gene', 'george', 'gerbil', 'geyser', 'ghost', 'giant', 'gift', 'girdle', 'girl', 'git', 'give', 'glad', 'gland', 'glass', 'glen', 'glider', 'glove', 'gloves', 'glue', 'glut', 'go', 'goal', 'goat', 'god', 'gold', 'golf', 'gong', 'good', 'goodie', 'goose', 'gopher', 'gossip', 'gown', 'grab', 'grade', 'grain', 'gram', 'grand', 'granny', 'grape', 'graph', 'grass', 'gray', 'grease', 'great', 'greek', 'green', 'grey', 'grief', 'grill', 'grip', 'grit', 'ground', 'group', 'grouse', 'growth', 'guard', 'guess', 'guest', 'guide', 'guilt', 'guilty', 'guitar', 'gum', 'gun', 'gutter', 'guy', 'gym', 'gyro', 'habit', 'hail', 'hair', 'half', 'hall', 'hamaki', 'hammer', 'hand', 'handle', 'hang', 'harbor', 'harm', 'harp', 'hat', 'hatbox', 'hate', 'hatred', 'haunt', 'hawk', 'hay', 'head', 'health', 'heart', 'hearth', 'heat', 'heater', 'heaven', 'heavy', 'hedge', 'heel', 'height', 'helen', 'helium', 'hell', 'hello', 'helmet', 'helo', 'help', 'hemp', 'hen', 'herb', 'heron', 'heyday', 'hide', 'high', 'hill', 'hip', 'hire', 'hit', 'hive', 'hobbit', 'hobby', 'hockey', 'hoe', 'hog', 'hold', 'hole', 'home', 'honey', 'hood', 'hoof', 'hook', 'hope', 'hops', 'horn', 'hornet', 'horror', 'horse', 'hose', 'host', 'hostel', 'hot', 'hotel', 'hour', 'house', 'hovel', 'hub', 'hubcap', 'hugger', 'human', 'humor', 'humour', 'hunger', 'hunt', 'hurry', 'hurt', 'hut', 'hutch', 'hyena', 'ice', 'icicle', 'icon', 'idea', 'ideal', 'if', 'igloo', 'image', 'impact', 'inbox', 'inch', 'income', 'index', 'injury', 'ink', 'inlay', 'inn', 'input', 'insect', 'inside', 'invite', 'iris', 'iron', 'irony', 'island', 'issue', 'it', 'item', 'jackal', 'jacket', 'jaguar', 'jail', 'jam', 'james', 'jar', 'jaw', 'jeans', 'jeep', 'jeff', 'jelly', 'jet', 'jewel', 'jiffy', 'job', 'jockey', 'joey', 'join', 'joint', 'joke', 'jot', 'joy', 'judge', 'judo', 'juice', 'jumbo', 'jump', 'jumper', 'junior', 'junk', 'junker', 'junket', 'jury', 'jute', 'kale', 'karate', 'karen', 'kayak', 'kazoo', 'keep', 'kendo', 'ketch', 'kettle', 'key', 'kick', 'kid', 'kidney', 'kill', 'kilt', 'kimono', 'kind', 'king', 'kiosk', 'kiss', 'kite', 'kitten', 'kitty', 'klomps', 'knee', 'knife', 'knight', 'knot', 'koala', 'lab', 'labour', 'lace', 'lack', 'ladder', 'lady', 'lake', 'lamb', 'lamp', 'lan', 'lanai', 'land', 'lap', 'lapdog', 'laptop', 'larch', 'larder', 'lark', 'latex', 'lathe', 'latte', 'laugh', 'lava', 'law', 'lawn', 'lawyer', 'lay', 'layer', 'lead', 'leader', 'leaf', 'league', 'leaker', 'leash', 'leave', 'leaver', 'leek', 'leg', 'legal', 'legume', 'lei', 'lemon', 'lemur', 'length', 'lentil', 'lesson', 'let', 'letter', 'level', 'lever', 'lie', 'lier', 'life', 'lift', 'light', 'lilac', 'lily', 'limit', 'limo', 'line', 'linen', 'liner', 'link', 'lion', 'lip', 'liquid', 'liquor', 'lisa', 'list', 'listen', 'litter', 'liver', 'living', 'lizard', 'llama', 'load', 'loaf', 'loafer', 'loan', 'local', 'lock', 'locker', 'locket', 'locust', 'loft', 'log', 'loggia', 'logic', 'long', 'look', 'loss', 'lot', 'lotion', 'lounge', 'lout', 'love', 'low', 'luck', 'lumber', 'lunch', 'lung', 'lunge', 'lute', 'lycra', 'lye', 'lynx', 'lyre', 'lyric', 'magic', 'maid', 'maiden', 'mail', 'main', 'major', 'make', 'makeup', 'male', 'mall', 'mallet', 'mambo', 'man', 'maniac', 'manner', 'manor', 'mantel', 'mantle', 'mantua', 'manx', 'many', 'map', 'maple', 'maraca', 'marble', 'mare', 'margin', 'mark', 'market', 'marsh', 'mask', 'mass', 'master', 'mat', 'match', 'mate', 'math', 'matter', 'maybe', 'mayor', 'meal', 'meat', 'media', 'medium', 'meet', 'melody', 'member', 'memory', 'men', 'menu', 'mess', 'metal', 'meteor', 'meter', 'method', 'metro', 'mice', 'middle', 'midi', 'might', 'mile', 'milk', 'mime', 'mimosa', 'mind', 'mine', 'mini', 'minion', 'minor', 'mint', 'minute', 'mirror', 'misfit', 'miss', 'mist', 'mister', 'miter', 'mitten', 'mix', 'mixer', 'moat', 'mobile', 'mocha', 'mode', 'model', 'modem', 'mole', 'mom', 'moment', 'money', 'monger', 'monkey', 'month', 'mood', 'moon', 'mop', 'morsel', 'mosque', 'most', 'motel', 'moth', 'mother', 'motion', 'motor', 'mound', 'mouse', 'mouser', 'mousse', 'mouth', 'mouton', 'move', 'mover', 'movie', 'mower', 'mud', 'mug', 'mukluk', 'mule', 'muscle', 'museum', 'music', 'mutt', 'n', 'nail', 'name', 'naming', 'napkin', 'nasty', 'nation', 'native', 'nature', 'neat', 'neck', 'need', 'needle', 'neon', 'nephew', 'nerve', 'nest', 'net', 'news', 'nexus', 'nicety', 'niche', 'nickel', 'niece', 'night', 'nobody', 'node', 'noise', 'noodle', 'normal', 'norse', 'north', 'nose', 'note', 'notice', 'notify', 'nougat', 'novel', 'nudge', 'number', 'nurse', 'nut', 'nylon', 'oak', 'oar', 'oasis', 'obi', 'object', 'oboe', 'ocean', 'ocelot', 'octave', 'octavo', 'octet', 'oeuvre', 'offer', 'office', 'oil', 'okra', 'oldie', 'olive', 'omega', 'omelet', 'one', 'onion', 'open', 'opera', 'opium', 'option', 'orange', 'orator', 'orchid', 'order', 'organ', 'osprey', 'other', 'others', 'ott', 'otter', 'ounce', 'outfit', 'outlay', 'output', 'outset', 'oval', 'ovary', 'oven', 'owl', 'owner', 'ox', 'oxen', 'oxford', 'oxygen', 'oyster', 'pace', 'pack', 'packet', 'pad', 'paddle', 'page', 'pagoda', 'pail', 'pain', 'paint', 'pair', 'pajama', 'palm', 'pan', 'panda', 'panic', 'pansy', 'pantry', 'pants', 'panty', 'paper', 'parade', 'parcel', 'pard', 'parent', 'park', 'parka', 'parrot', 'part', 'party', 'pass', 'past', 'pasta', 'paste', 'pastor', 'pastry', 'patch', 'path', 'patina', 'patio', 'patrol', 'pause', 'paw', 'pay', 'payee', 'pea', 'peace', 'peach', 'peak', 'peanut', 'pear', 'pearl', 'pedal', 'peen', 'peer', 'pelt', 'pen', 'pencil', 'peony', 'people', 'pepper', 'perch', 'period', 'permit', 'perp', 'person', 'pest', 'pet', 'petal', 'pew', 'pha', 'phase', 'phone', 'photo', 'phrase', 'piano', 'pick', 'pickax', 'picket', 'pickle', 'pie', 'piece', 'pier', 'piety', 'pig', 'pigeon', 'pike', 'pile', 'pillow', 'pilot', 'pimp', 'pimple', 'pin', 'pine', 'ping', 'pink', 'pinkie', 'pint', 'pinto', 'pipe', 'piracy', 'piss', 'pitch', 'pith', 'pizza', 'place', 'plain', 'plan', 'plane', 'planet', 'plant', 'plate', 'play', 'player', 'plenty', 'plier', 'plot', 'plough', 'plover', 'plow', 'plume', 'pocket', 'poem', 'poet', 'poetry', 'point', 'poison', 'pole', 'police', 'policy', 'polish', 'polo', 'pompom', 'poncho', 'pond', 'pony', 'poof', 'pool', 'pop', 'poppy', 'porch', 'port', 'porter', 'post', 'poster', 'pot', 'potato', 'potty', 'pouch', 'pound', 'powder', 'power', 'press', 'price', 'pride', 'priest', 'prince', 'print', 'prior', 'prison', 'prize', 'profit', 'prompt', 'proof', 'prose', 'prow', 'pruner', 'public', 'puddle', 'puffin', 'pull', 'pulley', 'puma', 'pump', 'punch', 'pupa', 'pupil', 'puppy', 'purple', 'purse', 'push', 'pusher', 'put', 'pvc', 'pyjama', 'quail', 'quart', 'quartz', 'queen', 'quiet', 'quill', 'quilt', 'quince', 'quit', 'quiver', 'quote', 'rabbi', 'rabbit', 'race', 'racer', 'racing', 'racism', 'racist', 'rack', 'radar', 'radio', 'radish', 'raffle', 'raft', 'rag', 'rage', 'rail', 'rain', 'raise', 'rake', 'ram', 'ramie', 'ranch', 'random', 'range', 'rank', 'rat', 'rate', 'ratio', 'raven', 'raw', 'ray', 'rayon', 'reach', 'read', 'reamer', 'rear', 'reason', 'recess', 'recipe', 'record', 'red', 'reef', 'refund', 'refuse', 'region', 'regret', 'reject', 'relief', 'relish', 'remote', 'remove', 'rent', 'repair', 'repeat', 'reply', 'report', 'resale', 'resist', 'resort', 'rest', 'result', 'retina', 'return', 'reveal', 'review', 'reward', 'rhyme', 'rhythm', 'rice', 'rich', 'riddle', 'ride', 'rider', 'ridge', 'rifle', 'right', 'rim', 'ring', 'rip', 'ripple', 'rise', 'riser', 'risk', 'river', 'road', 'roast', 'robe', 'robin', 'rock', 'rocker', 'rocket', 'rod', 'role', 'roll', 'roller', 'roof', 'room', 'root', 'rope', 'rose', 'rotate', 'rough', 'round', 'route', 'router', 'row', 'royal', 'rub', 'rubber', 'rubric', 'ruckus', 'ruffle', 'rugby', 'ruin', 'rule', 'rum', 'run', 'runner', 'rush', 'ruth', 'ry', 'sabre', 'sack', 'sad', 'saddle', 'safe', 'safety', 'sage', 'sail', 'sailor', 'salad', 'salary', 'sale', 'salmon', 'salon', 'saloon', 'salt', 'sampan', 'sample', 'sand', 'sari', 'sarong', 'sash', 'satin', 'satire', 'sauce', 'save', 'saving', 'savior', 'saw', 'scale', 'scarf', 'scene', 'scent', 'scheme', 'school', 'score', 'scorn', 'scow', 'screen', 'screw', 'scrim', 'scrip', 'script', 'sea', 'seal', 'search', 'season', 'seat', 'second', 'secret', 'sector', 'secure', 'seed', 'seeder', 'select', 'self', 'sell', 'senior', 'sense', 'sepal', 'series', 'serve', 'server', 'set', 'sewer', 'sex', 'shack', 'shade', 'shadow', 'shake', 'shaker', 'shame', 'shanty', 'shape', 'share', 'shark', 'sharon', 'shawl', 'she', 'shears', 'sheath', 'shed', 'sheep', 'sheet', 'shelf', 'shell', 'sherry', 'shield', 'shift', 'shin', 'shine', 'ship', 'shirt', 'shoat', 'shock', 'shoe', 'shoes', 'shofar', 'shoot', 'shop', 'shore', 'shorts', 'shot', 'shovel', 'show', 'shower', 'shred', 'shrimp', 'shrine', 'sick', 'side', 'siding', 'sign', 'signal', 'signet', 'signup', 'silica', 'silk', 'sill', 'silly', 'silo', 'silver', 'simple', 'sing', 'singer', 'single', 'sink', 'sir', 'sister', 'sitar', 'site', 'size', 'skate', 'skiing', 'skill', 'skin', 'skirt', 'skull', 'skunk', 'sky', 'slash', 'slave', 'sled', 'sledge', 'sleep', 'sleet', 'sleuth', 'slice', 'slide', 'slider', 'slime', 'slip', 'slope', 'sloth', 'smash', 'smell', 'smile', 'smock', 'smog', 'smoke', 'snail', 'snake', 'sneeze', 'snob', 'snorer', 'snow', 'soap', 'soccer', 'sock', 'socks', 'soda', 'sofa', 'soft', 'soil', 'solid', 'son', 'song', 'sonnet', 'soot', 'sorbet', 'sorrow', 'sort', 'sound', 'soup', 'source', 'south', 'sow', 'soy', 'space', 'spade', 'spank', 'spare', 'spark', 'spasm', 'spear', 'speech', 'speed', 'spell', 'spend', 'sphere', 'sphynx', 'spider', 'spike', 'spine', 'spiral', 'spirit', 'spite', 'spleen', 'split', 'sponge', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'sprout', 'spruce', 'spume', 'spur', 'spy', 'square', 'squash', 'squid', 'stable', 'stack', 'staff', 'stag', 'stage', 'stain', 'stair', 'stamen', 'stamp', 'stance', 'stand', 'star', 'start', 'state', 'status', 'stay', 'steak', 'steal', 'steam', 'steel', 'stem', 'step', 'steps', 'stew', 'stick', 'still', 'stitch', 'stock', 'stole', 'stone', 'stool', 'stop', 'store', 'storey', 'storm', 'story', 'stove', 'strain', 'strait', 'strap', 'straw', 'stream', 'street', 'stress', 'strike', 'string', 'strip', 'stroke', 'stud', 'studio', 'study', 'stuff', 'stupid', 'style', 'stylus', 'suburb', 'subway', 'suck', 'suede', 'sugar', 'suit', 'sultan', 'summer', 'sun', 'sunday', 'supply', 'survey', 'sushi', 'SUV', 'swamp', 'swan', 'swath', 'sweat', 'sweats', 'sweet', 'sweets', 'swell', 'swim', 'swing', 'swiss', 'switch', 'swivel', 'sword', 'synod', 'syrup', 'system', 'tabby', 'table', 'tackle', 'tail', 'tailor', 'tale', 'talk', 'tam', 'tandem', 'tank', 'tanker', 'tap', 'tard', 'target', 'task', 'tassel', 'taste', 'tatami', 'tattoo', 'tavern', 'tax', 'taxi', 'tea', 'teach', 'team', 'tear', 'teen', 'teeth', 'tell', 'teller', 'temp', 'temper', 'temple', 'tempo', 'tennis', 'tenor', 'tent', 'tepee', 'term', 'test', 'text', 'thanks', 'thaw', 'theism', 'theme', 'theory', 'thigh', 'thing', 'thirst', 'thomas', 'thong', 'thongs', 'thorn', 'thread', 'thrill', 'throat', 'throne', 'thrush', 'thumb', 'tiara', 'tic', 'ticket', 'tie', 'tiger', 'tight', 'tights', 'tile', 'till', 'timber', 'time', 'timer', 'tin', 'tinkle', 'tip', 'tire', 'tissue', 'title', 'toad', 'toast', 'today', 'toe', 'toga', 'togs', 'toilet', 'tom', 'tomato', 'ton', 'tone', 'tongue', 'tool', 'toot', 'tooth', 'top', 'topic', 'toque', 'torso', 'tosser', 'total', 'tote', 'touch', 'tough', 'tour', 'towel', 'tower', 'town', 'toy', 'track', 'trade', 'trail', 'train', 'tram', 'tramp', 'trash', 'travel', 'tray', 'treat', 'tree', 'tremor', 'trench', 'trial', 'tribe', 'trick', 'trim', 'trip', 'tripod', 'trout', 'trove', 'trowel', 'truck', 'trunk', 'trust', 'truth', 'try', 'tub', 'tuba', 'tube', 'tulip', 'tummy', 'tuna', 'tune', 'tunic', 'tunnel', 'turban', 'turn', 'turnip', 'turret', 'turtle', 'tussle', 'tutu', 'tuxedo', 'tv', 'twig', 'twine', 'twist', 'two', 'type', 'tyvek', 'uncle', 'union', 'unique', 'unit', 'unity', 'upper', 'urn', 'usage', 'use', 'user', 'usher', 'usual', 'vacuum', 'valley', 'value', 'van', 'vane', 'vanity', 'vase', 'vast', 'vault', 'veal', 'veil', 'vein', 'veldt', 'vellum', 'velvet', 'venom', 'verse', 'verve', 'vessel', 'vest', 'vibe', 'video', 'view', 'villa', 'vinyl', 'viola', 'violet', 'violin', 'virtue', 'virus', 'vise', 'vision', 'visit', 'visor', 'visual', 'vixen', 'voice', 'volume', 'voyage', 'wad', 'wafer', 'waffle', 'waist', 'wait', 'waiter', 'wake', 'walk', 'walker', 'wall', 'wallet', 'walnut', 'walrus', 'wampum', 'war', 'warden', 'warmth', 'wash', 'washer', 'wasp', 'waste', 'watch', 'water', 'wave', 'wax', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'web', 'wedge', 'weed', 'weeder', 'week', 'weight', 'weird', 'well', 'west', 'whale', 'wharf', 'wheat', 'wheel', 'while', 'whip', 'white', 'whole', 'whorl', 'width', 'wife', 'will', 'willow', 'win', 'wind', 'window', 'wine', 'wing', 'winner', 'winter', 'wire', 'wisdom', 'wish', 'witch', 'wolf', 'wombat', 'women', 'wonder', 'wood', 'wool', 'woolen', 'word', 'work', 'worker', 'world', 'worm', 'worry', 'worth', 'worthy', 'wound', 'wrap', 'wren', 'wrench', 'wrist', 'writer', 'wrong', 'yacht', 'yak', 'yam', 'yard', 'yarn', 'yawl', 'year', 'yeast', 'yellow', 'yew', 'yin', 'yoga', 'yogurt', 'yoke', 'you', 'young', 'youth', 'yurt', 'zebra', 'zephyr', 'zinc', 'zipper', 'zither', 'zone', 'zoo'\r\n]\r\nexport const adverbs = [\r\n    'ably', 'acidly', 'airily', 'ally', 'amply', 'apply', 'aptly', 'archly', 'avidly', 'badly', 'baldly', 'barely', 'basely', 'belly', 'bodily', 'boldly', 'bubbly', 'bully', 'burly', 'busily', 'calmly', 'chilly', 'coldly', 'comely', 'comply', 'coolly', 'cosily', 'costly', 'coyly', 'cuddly', 'curly', 'curtly', 'daily', 'dally', 'damply', 'darkly', 'deadly', 'dearly', 'deeply', 'deftly', 'dimly', 'direly', 'doily', 'dolly', 'doubly', 'dourly', 'drily', 'dryly', 'dually', 'dully', 'duly', 'dumbly', 'early', 'easily', 'edgily', 'eerily', 'evenly', 'evilly', 'fairly', 'family', 'feebly', 'fiddly', 'filly', 'finely', 'firmly', 'fitly', 'flatly', 'fly', 'folly', 'fondly', 'foully', 'freely', 'frilly', 'fully', 'gadfly', 'gaily', 'gamely', 'gangly', 'gently', 'giggly', 'gladly', 'glibly', 'glumly', 'godly', 'golly', 'goodly', 'googly', 'grimly', 'grisly', 'gully', 'hardly', 'hazily', 'highly', 'hilly', 'holly', 'holy', 'homely', 'homily', 'hotly', 'hourly', 'hugely', 'humbly', 'icily', 'idly', 'imply', 'jangly', 'jelly', 'jokily', 'jolly', 'justly', 'keenly', 'kindly', 'kingly', 'lamely', 'lastly', 'lately', 'lazily', 'likely', 'lily', 'limply', 'lively', 'lolly', 'lonely', 'lordly', 'loudly', 'lovely', 'lowly', 'madly', 'mainly', 'manly', 'mayfly', 'mealy', 'meanly', 'measly', 'meekly', 'merely', 'mildly', 'mostly', 'mutely', 'namely', 'nearly', 'neatly', 'newly', 'nicely', 'nimbly', 'nobly', 'nosily', 'numbly', 'oddly', 'oily', 'only', 'openly', 'orally', 'overly', 'palely', 'partly', 'pearly', 'pebbly', 'pertly', 'pimply', 'ply', 'poorly', 'portly', 'primly', 'purely', 'rally', 'rarely', 'rashly', 'really', 'rely', 'reply', 'richly', 'ripely', 'rosily', 'rudely', 'sadly', 'safely', 'sagely', 'sally', 'sanely', 'scaly', 'seemly', 'shyly', 'sickly', 'silly', 'simply', 'singly', 'slily', 'slowly', 'sly', 'slyly', 'smelly', 'smugly', 'snugly', 'softly', 'solely', 'sorely', 'sourly', 'stably', 'steely', 'subtly', 'sully', 'supply', 'surely', 'surly', 'tally', 'tamely', 'tartly', 'tautly', 'termly', 'thinly', 'tidily', 'timely', 'tingly', 'tinkly', 'triply', 'truly', 'ugly', 'unduly', 'unholy', 'unruly', 'vainly', 'vastly', 'viably', 'vilely', 'waggly', 'wanly', 'warily', 'warmly', 'wavily', 'weakly', 'weekly', 'wetly', 'wholly', 'widely', 'wifely', 'wildly', 'wily', 'wisely', 'wobbly', 'woolly', 'wryly', 'yearly'\r\n]\r\nexport const interjections = [\r\n    'aha', 'ahem', 'ahh', 'ahoy', 'alas', 'arg', 'aw', 'bam', 'bingo', 'blah', 'boo', 'bravo', 'brrr', 'cheers', 'dang', 'drat', 'darn', 'duh', 'eek', 'eh', 'encore', 'eureka', 'gee', 'golly', 'gosh', 'haha', 'hello', 'hey', 'hmm', 'huh', 'humph', 'hurray', 'oh', 'oh my', 'oops', 'ouch', 'ow', 'phew', 'phooey', 'pooh', 'pow', 'rats', 'shh', 'shoo', 'thanks', 'there', 'uh-huh', 'uh-oh', 'ugh', 'wahoo', 'well', 'whoa', 'whoops', 'wow', 'yeah', 'yes', 'yikes', 'yippee', 'yo', 'yuck'\r\n]\r\nexport const adjectives = [\r\n    'abject', 'abrupt', 'absent', 'absurd', 'active', 'acute', 'adept', 'adroit', 'aerial', 'agile', 'airy', 'alert', 'aloof', 'amoral', 'amused', 'angry', 'apt', 'arch', 'ardent', 'artful', 'august', 'aural', 'avowed', 'awful', 'bad', 'banal', 'basic', 'bawdy', 'benign', 'bitter', 'bland', 'blank', 'bleak', 'blind', 'blithe', 'blunt', 'boyish', 'brave', 'breezy', 'brief', 'bright', 'broad', 'broken', 'busy', 'cagy', 'cm', 'candid', 'canny', 'carnal', 'casual', 'catty', 'caudal', 'chaste', 'cheeky', 'clear', 'clever', 'clinic', 'clumsy', 'coarse', 'cocky', 'cogent', 'cold', 'conic', 'coward', 'coy', 'cozy', 'crass', 'craven', 'crazy', 'creepy', 'crude', 'curt', 'cute', 'cynic', 'dainty', 'dark', 'dazed', 'dear', 'decent', 'deep', 'deft', 'demure', 'dense', 'dim', 'dire', 'dismal', 'dizzy', 'dogged', 'droll', 'dry', 'dull', 'eager', 'easy', 'eerie', 'equal', 'erect', 'erotic', 'ethic', 'even', 'evil', 'exact', 'exotic', 'faint', 'false', 'famous', 'fatal', 'faulty', 'feeble', 'firm', 'fishy', 'fixed', 'flabby', 'flashy', 'flat', 'fleet', 'flimsy', 'floppy', 'fluent', 'fluid', 'fond', 'foul', 'frail', 'frank', 'free', 'fresh', 'frisky', 'frugal', 'funny', 'fussy', 'futile', 'fuzzy', 'game', 'garish', 'gauche', 'gaudy', 'gawky', 'genial', 'gent', 'glad', 'glib', 'glum', 'grand', 'grave', 'great', 'greedy', 'grimy', 'groggy', 'gross', 'guilty', 'happy', 'hardy', 'harsh', 'hasty', 'hazy', 'heated', 'hectic', 'heroic', 'hoarse', 'honest', 'hot', 'huge', 'humane', 'humble', 'hungry', 'husky', 'icy', 'inept', 'insane', 'ireful', 'ironic', 'jaded', 'jaunty', 'jerky', 'jocose', 'joking', 'jolly', 'jovial', 'joyful', 'juicy', 'just', 'keen', 'lame', 'lavish', 'lax', 'lazy', 'lewd', 'light', 'limp', 'livid', 'logic', 'loose', 'loud', 'loving', 'loyal', 'lubber', 'lucid', 'lucky', 'lurid', 'lusty', 'mad', 'magic', 'manful', 'marked', 'mature', 'meager', 'mean', 'meek', 'menial', 'merry', 'messy', 'metric', 'mighty', 'mild', 'minute', 'miser', 'modest', 'moist', 'moody', 'moral', 'morbid', 'murky', 'music', 'mute', 'naive', 'naked', 'narrow', 'nasty', 'neat', 'nice', 'nimble', 'noble', 'noisy', 'normal', 'nosy', 'numb', 'oafish', 'opaque', 'pert', 'pesky', 'physic', 'pious', 'pithy', 'placid', 'plain', 'poetic', 'polite', 'poor', 'prim', 'prissy', 'proper', 'proud', 'public', 'pure', 'quaint', 'queer', 'quick', 'quiet', 'rabid', 'racy', 'raging', 'rakish', 'random', 'rank', 'rapid', 'rapt', 'rare', 'rash', 'raving', 'ready', 'regal', 'remote', 'rich', 'right', 'rigid', 'ripe', 'ritual', 'robust', 'rosy', 'rough', 'royal', 'rude', 'rueful', 'rugged', 'sad', 'safe', 'sane', 'saucy', 'savage', 'scant', 'secret', 'secure', 'sedate', 'serene', 'severe', 'sexy', 'sexual', 'shaky', 'sharp', 'shoddy', 'showy', 'shrewd', 'shy', 'silent', 'simple', 'skimpy', 'slack', 'sleazy', 'sleek', 'slick', 'slight', 'slow', 'smart', 'smooth', 'smug', 'snooty', 'snug', 'sober', 'soft', 'soggy', 'solemn', 'somber', 'sordid', 'sore', 'sound', 'sour', 'spry', 'square', 'staid', 'stark', 'static', 'steady', 'stern', 'stiff', 'stingy', 'stoic', 'stolid', 'stormy', 'stout', 'strict', 'strong', 'stuffy', 'stupid', 'suave', 'subtle', 'sudden', 'sudden', 'sulky', 'sullen', 'superb', 'supp', 'sure', 'swanky', 'swift', 'tacit', 'tacky', 'tame', 'tardy', 'tart', 'taut', 'tense', 'tepid', 'terse', 'testy', 'thick', 'thin', 'tidy', 'tight', 'timid', 'tonal', 'tough', 'tragic', 'trim', 'trite', 'true', 'trying', 'turgid', 'uneasy', 'unique', 'unkind', 'unsafe', 'urgent', 'useful', 'vague', 'vain', 'vexed', 'visual', 'vital', 'vivid', 'vocal', 'vulgar', 'wan', 'wanton', 'warm', 'weak', 'weird', 'wicked', 'wide', 'wild', 'wise', 'witty', 'woeful', 'wrong', 'wry'\r\n]\r\nexport const verbed = new Proxy(verbs, {\r\n    get: (arr, prop) => {\r\n        // Check it's not a property\r\n        if (!(prop in [])) {\r\n            return getPastTense(arr[prop])\r\n        } else {\r\n            return arr[prop]\r\n        }\r\n    }\r\n})\r\n","// import * as WORDLISTS from WORDLIST_URL\r\n// Import the LitElement base class and html helper function\r\n'use strict'\r\nimport { LitElement, html } from 'lit-element'\r\n// import * as WORDLISTS from './deps/parts of speech word files/wordlists.js'\r\n// import * as WORDLISTS from './deps/wordlists/wordlists.js'\r\nimport * as WORDLISTS from './deps/wordlists/wordlists6.js' // save 100kb by only using 6 letter words and less\r\nconsole.log(WORDLISTS)\r\n// Extend the LitElement base class\r\nclass RandomSentenceGenerator extends LitElement {\r\n    /**\r\n     * Implement `render` to define a template for your element.\r\n     *\r\n     * You must provide an implementation of `render` for any element\r\n     * that uses LitElement as a base class.\r\n     */\r\n    static get properties () {\r\n        return {\r\n            template: {\r\n                type: String,\r\n                attribute: 'template'\r\n            },\r\n            parsedString: {\r\n                type: String\r\n                /*,\r\n                computed: 'parse(template)' */\r\n            },\r\n            fetchedWordlistCount: {\r\n                type: Number,\r\n                value: 0\r\n            },\r\n            capitalize: {\r\n                type: Boolean\r\n            },\r\n            partsOfSpeechMap: {\r\n                type: Object\r\n            },\r\n            templateEntropy: {\r\n                type: Number,\r\n                reflect: true,\r\n                attribute: 'template-entropy'\r\n            },\r\n            maxWordLength: {\r\n                type: Number,\r\n                attribute: 'max-word-length'\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor () {\r\n        super()\r\n\r\n        // Properties\r\n        this.template = 'adjective noun verb adverb.'\r\n        this.maxWordLength = 0 // disabled\r\n        this.parsedString = ''\r\n        this.fetchedWordlistCount = 0\r\n        this.capitalize = true\r\n        this.partsOfSpeechMap = {\r\n            'noun': 'nouns',\r\n            'adverb': 'adverbs',\r\n            'adv': 'adverbs',\r\n            'verb': 'verbs',\r\n            'interjection': 'interjections',\r\n            'adjective': 'adjectives',\r\n            'adj': 'adjectives',\r\n            'verbed': 'verbed'\r\n        }\r\n        this.partsOfSpeech = Object.keys(this.partsOfSpeechMap)\r\n        this._wordlists = WORDLISTS\r\n    }\r\n\r\n    updated (changedProperties) {\r\n        // console.log('changed properties')\r\n        // console.log(changedProperties) // logs previous values\r\n        let regen = false\r\n        if (changedProperties.has('template')) {\r\n            regen = true\r\n        }\r\n        if (changedProperties.has('maxWordLength')) {\r\n            console.dir(this.maxWordLength)\r\n            if (this.maxWordLength) {\r\n                const wl = {...this._wordlists}\r\n                for (const partOfSpeech in this._wordlists) {\r\n                    console.log(this._wordlists[partOfSpeech])\r\n                    if (Array.isArray(this._wordlists[partOfSpeech])) {\r\n                        wl[partOfSpeech] = this._wordlists[partOfSpeech].filter(word => word.length <= this.maxWordLength)\r\n                    }\r\n                }\r\n                this._wordlists = wl\r\n            }\r\n            regen = true\r\n        }\r\n        if (regen) this.generate()\r\n        // if (changedProperties.has('templateEntropy')) {\r\n        //     this.\r\n        // }\r\n    }\r\n\r\n    _RNG (entropy) {\r\n        if (entropy > 1074) {\r\n            throw new Error('Javascript can not handle that much entropy!')\r\n        }\r\n        let randNum = 0\r\n        const crypto = window.crypto || window.msCrypto\r\n\r\n        if (crypto) {\r\n            const entropy256 = Math.ceil(entropy / 8)\r\n\r\n            let buffer = new Uint8Array(entropy256)\r\n            crypto.getRandomValues(buffer)\r\n\r\n            randNum = buffer.reduce((num, value) => {\r\n                return num * value\r\n            }, 1) / Math.pow(256, entropy256)\r\n        } else {\r\n            console.warn('Secure RNG not found. Using Math.random')\r\n            randNum = Math.random()\r\n        }\r\n        return randNum\r\n    }\r\n\r\n    setRNG (fn) {\r\n        this._RNG = fn\r\n    }\r\n\r\n    _captitalize (str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1)\r\n    }\r\n\r\n    getWord (partOfSpeech) {\r\n        const words = this._wordlists[this.partsOfSpeechMap[partOfSpeech]]\r\n        const requiredEntropy = Math.log(words.length) / Math.log(2)\r\n        const index = this._RNG(requiredEntropy) * words.length\r\n\r\n        return {\r\n            word: words[Math.round(index)],\r\n            entropy: words.length\r\n        }\r\n    }\r\n\r\n    generate () {\r\n        this.parsedString = this.parse(this.template)\r\n    }\r\n\r\n    parse (template) {\r\n        const split = template.split(/[\\s]/g)\r\n        let entropy = 1\r\n        const final = split.map(word => {\r\n            const lower = word.toLowerCase()\r\n\r\n            this.partsOfSpeech.some(partOfSpeech => {\r\n                const partOfSpeechIndex = lower.indexOf(partOfSpeech) // Check it exists\r\n                const nextChar = word.charAt(partOfSpeech.length)\r\n\r\n                if (partOfSpeechIndex === 0 && !(nextChar && (nextChar.match(/[a-zA-Z]/g) != null))) {\r\n                    const replacement = this.getWord(partOfSpeech)\r\n                    word = replacement.word + word.slice(partOfSpeech.length) // Append the rest of the \"word\" (punctuation)\r\n                    entropy = entropy * replacement.entropy\r\n                    return true\r\n                }\r\n            })\r\n            return word\r\n        })\r\n        this.templateEntropy = Math.floor(Math.log(entropy) / Math.log(8))\r\n        // console.log('parsing ' + template)\r\n        return /* this.templateEntropy + ' - ' + */ final.join(' ')\r\n    }\r\n\r\n    render () {\r\n        /**\r\n         * `render` must return a lit-html `TemplateResult`.\r\n         *\r\n         * To create a `TemplateResult`, tag a JavaScript template literal\r\n         * with the `html` helper function:\r\n         */\r\n        return html`\r\n            ${this.parsedString}\r\n        `\r\n    }\r\n}\r\n// Register the new element with the browser.\r\ncustomElements.define('random-sentence-generator', RandomSentenceGenerator)\r\n\r\nexport default RandomSentenceGenerator\r\n","import { LitElement, html, css } from 'lit-element'\nimport { connect } from 'pwa-helpers'\nimport { store } from '../../store.js'\n\n// import { createWallet } from '../../../qora/createWallet.js'\n// import { createWallet } from '../../qora/createWallet.js'\n// import { createWallet } from '../../api/createWallet.js'\nimport { createWallet } from '@frag-crypto/crypto'\n\nimport { doLogin, doLogout, doSelectAddress } from '../../redux/app/app-actions.js'\nimport { doStoreWallet } from '../../redux/user/user-actions.js'\n// import { registerUsername } from '../../api/registerUsername.js'\n// import { registerUsername } from 'frag-qora-crypto'\n\nimport snackbar from '../../functional-components/snackbar.js'\n\n// import { logIn } from '../../actions/app-actions.js'\nimport '@material/mwc-button'\nimport '@material/mwc-icon-button'\nimport '@material/mwc-checkbox'\nimport '@material/mwc-icon'\nimport '@material/mwc-formfield'\n// import '@material/mwc-checkbox'\n// import '@polymer/paper-checkbox/paper-checkbox.js'\n\nimport '@polymer/iron-pages'\nimport '@polymer/iron-label/iron-label.js'\nimport '@polymer/paper-input/paper-input-container.js'\nimport '@polymer/paper-input/paper-input.js'\n\nimport 'random-sentence-generator'\n\nimport ripple from '../../functional-components/loading-ripple.js'\n\nlet lastPassword = ''\n\nclass CreateAccountSection extends connect(store)(LitElement) {\n    static get properties() {\n        return {\n            nextHidden: { type: Boolean, notify: true },\n            nextDisabled: { type: Boolean, notify: true },\n            nextText: { type: String, notify: true },\n            backHidden: { type: Boolean, notify: true },\n            backDisabled: { type: Boolean, notify: true },\n            backText: { type: String, notify: true },\n            hideNav: { type: Boolean, notify: true },\n\n            selectedPage: { type: String },\n            error: { type: Boolean },\n            errorMessage: { type: String },\n            nextButtonText: { type: String },\n            saveAccount: { type: Boolean },\n            createAccountLoading: { type: Boolean },\n            hasSavedSeedphrase: { type: Boolean }\n        }\n    }\n\n    static get styles() {\n        return [\n            css`\n\n            `\n        ]\n    }\n\n    constructor() {\n        super()\n        this.nextText = 'Next'\n        this.backText = 'Back'\n        this.nextDisabled = true\n\n        this.selectedPage = 'info'\n        this.nextButtonText = 'Next'\n        this.saveAccount = true\n        this.hasSavedSeedphrase = false\n        this.createAccountLoading = false\n        const welcomeMessage = 'Welcome to Qortal'\n        this.welcomeMessage = welcomeMessage\n\n        this.pages = {\n            info: {\n                next: e => {\n                    this.error = false\n                    this.errorMessage = ''\n                    // const randSeedPhrase = this.shadowRoot.getElementById('randSentence').parsedString\n                    // const seedPhrase = this.shadowRoot.getElementById('seedPhrase').value\n                    // console.log(randSeedPhrase, seedPhrase)\n                    if (!this.hasSavedSeedphrase) {\n                        this.error = true\n                        this.errorMessage = 'Please save your seedphrase!'\n                        return\n                    }\n\n                    this.nextButtonText = 'Create'\n                    this.selectPage('password')\n                    this.updateNext()\n                },\n                back: () => {\n                    this.navigate('welcome')\n                }\n            },\n            password: {\n                next: e => {\n                    // Create account and login :)\n                    this.createAccountLoading = true\n                    const password = this.shadowRoot.getElementById('password').value\n                    // console.log(this.shadowRoot.getElementById('password'))\n\n                    if (this.saveAccount) {\n                        if (password === '') {\n                            snackbar.add({\n                                labelText: 'Please enter a password',\n                                dismiss: true\n                            })\n                            return\n                        }\n\n                        if (password.length < 8 && lastPassword !== password) {\n                            snackbar.add({\n                                labelText: 'Your password is less than 8 characters! This is not recommended. You can press login again to ignore this warning.',\n                                dismiss: true\n                            })\n                            lastPassword = password\n                            return\n                        }\n                    }\n\n                    const seedPhrase = this.shadowRoot.getElementById('randSentence').parsedString\n\n                    // this.loadingRipple.welcomeMessage = welcomeMessage + ', ' + username\n                    ripple.welcomeMessage = welcomeMessage\n\n                    // this.loadingRipple.open({\n                    ripple.open({\n                        x: e.clientX,\n                        y: e.clientY\n                    })\n                        .then(() => createWallet('phrase', seedPhrase, status => {\n                            // this.loadingRipple.loadingMessage = status\n                            ripple.loadingMessage = status\n                        }))\n                        .then(wallet => {\n                            // .then(() => store.dispatch(doLogin('phrase', seedPhrase, status => {\n                            //     this.loadingRipple.loadingMessage = status\n                            // })))\n                            // Get airdrop here ninja\n                            // Do the callbacks here so that I can return the wallet again at the end of it\n\n                            store.dispatch(doLogin(wallet, password))\n                            store.dispatch(doSelectAddress(wallet.addresses[0]))\n                            this.navigate('show-address')\n                            // return this.loadingRipple.fade()\n                            return ripple.fade()\n                                // Save account after user is logged in...for good UX\n                                .then(() => {\n                                    // console.log(this, this.saveAccount)\n                                    if (!this.saveAccount) return\n                                    return store.dispatch(doStoreWallet(wallet, password, '' /* username */, () => {\n                                        // console.log('STATUS UPDATE <3')\n                                        // this.loadingRipple.loadingMessage = status\n                                        ripple.loadingMessage = status\n                                    })).catch(err => console.error(err))\n                                    // ^^ Don't want this one to break logging\n                                })\n                        })\n                        .then(() => this.cleanup())\n                        .catch(e => {\n                            snackbar.add({\n                                labelText: e,\n                                dismiss: true\n                            })\n                            // this.error = true\n                            // this.errorMessage = e\n                            console.error('== Error == \\n', e)\n                            store.dispatch(doLogout())\n                            // this.loadingRipple.close()\n                            ripple.close()\n                        })\n                },\n                back: () => {\n                    this.selectPage('info')\n                    this.updateNext()\n                }\n            }\n        }\n        this.pageIndexes = {\n            info: 0,\n            password: 1\n        }\n\n        this.nextEnabled = false\n        this.prevEnabled = false\n    }\n\n    cleanup() { // Practically the constructor...what a waste\n        this.shadowRoot.getElementById('randSentence').generate()\n        this.shadowRoot.getElementById('password').value = ''\n        this.hasSavedSeedphrase = false\n        this.selectPage('info')\n        this.error = false\n        this.errorMessage = ''\n        this.nextButtonText = 'Next'\n        this.createAccountLoading = false\n        this.saveAccount = true\n    }\n\n    render() {\n        return html`\n            <style>\n                div[hidden] {\n                    display:none !important; \n                }\n                .flex {\n                    display: flex;\n                }\n                .flex.column {\n                    flex-direction: column;\n                }\n                #createAccountSection {\n                    max-height: calc(var(--window-height) - 56px);\n                    max-width: 440px;\n                    /* max-height: 500px; */\n                    max-height:calc(100% - 100px);\n                    padding: 0 12px;\n                    overflow-y:auto;\n                }\n                #createAccountPages {\n                    flex-shrink:1;\n                    text-align: left;\n                    /* overflow:auto; */\n                    left:0;\n                }\n                #createAccountPages [page] {\n                    flex-shrink:1;\n                }\n                /* #tosContent { */\n                /* .section-content {\n                    padding:0 24px;\n                    padding-bottom:0;\n                    overflow:auto;\n                    flex-shrink:1;\n                    max-height: calc(100vh - 296px);\n                    \n                } */\n\n                mwc-checkbox::shadow .mdc-checkbox::after, mwc-checkbox::shadow .mdc-checkbox::before {\n                    background-color:var(--mdc-theme-primary)\n                }\n                @media only screen and (max-width: ${getComputedStyle(document.body).getPropertyValue('--layout-breakpoint-tablet')}) {\n                    /* Mobile */\n                    #createAccountSection {\n                        /* max-height: calc(var(--window-height) - 204px); */\n                        /* max-height: calc(var(--window-height) - 38px); */\n                        /* height: calc(var(--window-height) - 38px); */\n                        /* max-width:var(--layout-breakpoint-tablet); */\n                        max-width: 100%;\n                        /* height:100%; */\n                        height: calc(var(--window-height) - 56px);\n                    }\n                    #infoContent{\n                        height:auto;\n                        min-height: calc(var(--window-height) - 96px)\n                    }\n                    #nav {\n                        flex-shrink:0;\n                        padding-top:8px;\n                    }\n                }\n\n                #infoContent p {\n                    text-align: justify;\n                }\n                @keyframes fade {\n                    from {\n                        opacity: 0;\n                        /* transform: translateX(-20%) */\n                    }\n                    to {\n                        opacity: 1;\n                        /* transform: translateX(0) */\n                    }\n                }\n                iron-pages .animated {\n                    animation-duration: 0.6s;\n                    animation-name: fade;\n                }\n\n                paper-input {\n                    --paper-input-container-input-color: var(--mdc-theme-on-surface);\n                }\n\n                paper-icon-button {\n                    --paper-icon-button-ink-color: var(--mdc-theme-primary);\n                }\n            </style>\n            \n            <div id=\"createAccountSection\" class=\"flex column\">\n                <iron-pages selected=\"${this.selectedPage}\" attr-for-selected=\"page\" id=\"createAccountPages\">\n                    <div page=\"info\">\n                        <div id=\"infoContent\" class=\"section-content\" style=\"\">\n                            <br>\n                            <!-- <p style=\"margin-bottom:0;\">\n                                Below is a randomly generated seedphrase. You can regenerate it until you find one that you like. Please write it down and/or memorise it. You will need it in order to login to your account.\n                            </p> -->\n                            <h3 style=\"text-align:center; margin-top: 0; font-weight: 100; font-family: 'Roboto Mono', monospace;\">Create account</h3>\n                            <p>\n                                Welcome to QORT, you will find it to be similar to that of an RPG game, you, as a minter on the QORT network (if you choose to become one) will have the chance to level your account up, giving you both more of the QORT block reward and also larger influence over the network in terms of voting on decisions for the platform. \n                            </p>\n                            <p style=\"margin-bottom:0;\">\n                                The first step, is to create your QORT account! Below, you will see a randomly generated ‘seedphrase’. This phrase is used as your private key generator for your blockchain account in QORT. Please write this phrase down and save it somewhere safe. This is extremely important information for your QORT account.\n                            </p>\n\n                            <!-- border-bottom: 2px solid var(--mdc-theme-primary); border-top: 2px solid var(--mdc-theme-primary); -->\n                            <div style=\"border-radius: 4px; padding-top: 8px; background: rgba(3,169,244,0.1); margin-top: 24px;\">\n                                <div style=\"display: inline-block; padding:12px; width:calc(100% - 84px);\">\n                                    <random-sentence-generator\n                                        template=\"adverb verb the adjective noun and verb the adjective noun with the adjective noun\"\n                                        id=\"randSentence\"></random-sentence-generator>\n                                </div>\n                                        <!--\n                                            --- --- --- --- --- --- --- --- --- --- --- -\n                                            Calculations\n                                            --- --- --- --- --- --- --- --- --- --- --- -\n                                            403 adjectives\n                                            60 interjections\n                                            243 adverbs\n                                            2353 nouns\n                                            3387 verbs\n                                            --- --- --- --- --- --- --- --- --- --- --- -\n                                            sooo 243*3387*403*2353*3387*403*2353*403*2353 ~ 2^92\n                                            --- --- --- --- --- --- --- --- --- --- --- -\n                                            -->\n                                <paper-icon-button\n                                    icon=\"icons:autorenew\"\n                                    style=\"top:-12px; margin:8px;\"\n                                    @click=${() => this.shadowRoot.getElementById('randSentence').generate()}\n                                ></paper-icon-button>\n                            </div>\n                             <!-- <div style=\"display:flex;\">\n                                <mwc-icon style=\"padding: 20px; padding-left:0; padding-top: 26px;\">lock</mwc-icon>\n                                <paper-input style=\"width:100%;\" id=\"seedPhrase\" always-float-labell label=\"Repeat seed phrase\"></paper-input>\n                            </div> -->\n                        </div>\n                        <div style=\"text-align:right; vertical-align: top; line-height: 40px; margin:0;\">\n                            <label\n                                for=\"hasSavedSeedphraseCheckbox\"\n                                @click=${() => this.shadowRoot.getElementById('hasSavedSeedphraseCheckbox').click()}\n                                >I have saved my seedphrase</label>\n                                <mwc-checkbox id=\"hasSavedSeedphraseCheckbox\" @click=${e => { this.hasSavedSeedphrase = !e.target.checked; this.updateNext() }} ?checked=${this.hasSavedSeedphrase}></mwc-checkbox>\n                        </div>\n                    </div>\n\n                    <div page=\"password\">\n                        <div id=\"saveContent\" class=\"section-content\">\n                            <h3>Save in browser</h3>\n                            <p style=\"text-align: justify;\">Your account is now ready to be created. It will be saved in this browser. If you do not want your new account to be saved in your browser you can uncheck the box below. You will still be able to login with your new account(after logging out), you'll just have to retype your seedphrase.</p>\n                            <div style=\"display:flex;\" ?hidden=${!this.saveAccount}>\n                                <mwc-icon style=\"padding: 20px; padding-left:0; padding-top: 28px;\">vpn_key</mwc-icon>\n                                <paper-input style=\"width:100%;\" label=\"Password\" id=\"password\" type=\"password\"></paper-input>\n                            </div>\n                            <div style=\"text-align:right; vertical-align: top; line-height: 40px; margin:0;\">\n                                <label\n                                    for=\"saveInBrowserCheckbox\"\n                                    @click=${() => this.shadowRoot.getElementById('saveInBrowserCheckbox').click()}\n                                    >Save in this browser</label>\n                                    <mwc-checkbox id=\"saveInBrowserCheckbox\" @click=${e => { this.saveAccount = !e.target.checked }} ?checked=${this.saveAccount}></mwc-checkbox>\n                            </div>\n                        </div>\n                    </div>\n                </iron-pages>\n            </div>\n        `\n    }\n\n    _pageChange(newPage, oldPage) {\n        if (!this.shadowRoot.querySelector('#createAccountPages') || !newPage) {\n            return\n        }\n        const pages = this.shadowRoot.querySelector('#createAccountPages').children\n        // Run the animation on the newly selected page\n        const newIndex = this.pageIndexes[newPage]\n        if (!pages[newIndex].className.includes('animated')) {\n            pages[newIndex].className += ' animated'\n        }\n\n        if (typeof oldPage !== 'undefined') {\n            const oldIndex = this.pageIndexes[oldPage]\n            // Stop the animation of hidden pages\n            // pages[oldIndex].className = pages[oldIndex].className.split(' animated').join('');\n            pages[oldIndex].classList.remove('animated')\n        }\n    }\n\n    selectPage(newPage) {\n        const oldPage = this.selectedPage\n        this.selectedPage = newPage\n        this._pageChange(newPage, oldPage)\n    }\n\n    updateNext() {\n        if (this.selectedPage === 'info') {\n            this.nextText = 'Next'\n            this.nextDisabled = !this.hasSavedSeedphrase\n        } else if (this.selectPage === 'password') {\n            this.nextDisabled = false\n            this.nextText = 'Create account'\n        }\n\n        this.updatedProperty()\n    }\n\n    back(e) {\n        this.pages[this.selectedPage].back(e)\n    }\n\n    next(e) {\n        this.pages[this.selectedPage].next(e)\n        // if (this.selectedPage === 'info') {\n        //     this.selectPage('password')\n        // }\n    }\n\n    updatedProperty() {\n        this.dispatchEvent(new CustomEvent('updatedProperty', {\n            detail: {},\n            bubbles: true,\n            composed: true\n        }))\n    }\n\n    navigate(page) {\n        this.dispatchEvent(new CustomEvent('navigate', {\n            detail: { page },\n            bubbles: true,\n            composed: true\n        }))\n    }\n\n    stateChanged(state) {\n        // this.loggedIn = state.app.loggedIn\n    }\n\n    createAccount() {\n\n    }\n}\n\nwindow.customElements.define('create-account-section', CreateAccountSection)\n"],"names":[],"mappings":"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OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,EAAE,IAAI,CAAC,YAAY,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,4BAA4B,CAAC,CAAC,KAAK,EAAE,CAAC;AACpH;AACA,qFAAqF,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,GAAE,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC;AACnM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE,CAAC;AACnH;AACA,oFAAoF,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,QAAO,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;AACjK;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC;MACT,KAAK;AACL;MACA,IAAI,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE;MAClC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE;MAC/E,YAAY,MAAM;MAClB,SAAS;MACT,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,SAAQ;MACnF;MACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAC;MAClD,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC7D,YAAY,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,IAAI,YAAW;MACpD,SAAS;AACT;MACA,QAAQ,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;MAC5C,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAC;MACtD;MACA;MACA,YAAY,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAC;MACxD,SAAS;MACT,KAAK;AACL;MACA,IAAI,UAAU,CAAC,OAAO,EAAE;MACxB,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,aAAY;MACzC,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAO;MACnC,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAC;MAC1C,KAAK;AACL;MACA,IAAI,UAAU,GAAG;MACjB,QAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;MAC1C,YAAY,IAAI,CAAC,QAAQ,GAAG,OAAM;MAClC,YAAY,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,mBAAkB;MACxD,SAAS,MAAM,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;MACnD,YAAY,IAAI,CAAC,YAAY,GAAG,MAAK;MACrC,YAAY,IAAI,CAAC,QAAQ,GAAG,iBAAgB;MAC5C,SAAS;AACT;MACA,QAAQ,IAAI,CAAC,eAAe,GAAE;MAC9B,KAAK;AACL;MACA,IAAI,IAAI,CAAC,CAAC,EAAE;MACZ,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC;MAC7C,KAAK;AACL;MACA,IAAI,IAAI,CAAC,CAAC,EAAE;MACZ,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC;MAC7C;MACA;MACA;MACA,KAAK;AACL;MACA,IAAI,eAAe,GAAG;MACtB,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,iBAAiB,EAAE;MAC9D,YAAY,MAAM,EAAE,EAAE;MACtB,YAAY,OAAO,EAAE,IAAI;MACzB,YAAY,QAAQ,EAAE,IAAI;MAC1B,SAAS,CAAC,EAAC;MACX,KAAK;AACL;MACA,IAAI,QAAQ,CAAC,IAAI,EAAE;MACnB,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,UAAU,EAAE;MACvD,YAAY,MAAM,EAAE,EAAE,IAAI,EAAE;MAC5B,YAAY,OAAO,EAAE,IAAI;MACzB,YAAY,QAAQ,EAAE,IAAI;MAC1B,SAAS,CAAC,EAAC;MACX,KAAK;AACL;MACA,IAAI,YAAY,CAAC,KAAK,EAAE;MACxB;MACA,KAAK;AACL;MACA,IAAI,aAAa,GAAG;AACpB;MACA,KAAK;MACL,CAAC;AACD;MACA,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,wBAAwB,EAAE,oBAAoB,CAAC;;;;;;"}