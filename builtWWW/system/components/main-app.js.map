{"version":3,"file":"main-app.js","sources":["../../../../frag-core/src/plugins/streams.js","../../../../frag-core/src/components/main-app.js"],"sourcesContent":["import { store } from '../store.js'\r\nimport { EpmlStream } from 'epml'\r\n\r\nconst LOGIN_STREAM_NAME = 'logged_in'\r\nconst CONFIG_STREAM_NAME = 'config'\r\nconst SELECTED_ADDRESS_STREAM_NAME = 'selected_address'\r\n\r\nexport const loggedInStream = new EpmlStream(LOGIN_STREAM_NAME, () => store.getState().app.loggedIn)\r\nexport const configStream = new EpmlStream(CONFIG_STREAM_NAME, () => store.getState().config)\r\nexport const selectedAddressStream = new EpmlStream(SELECTED_ADDRESS_STREAM_NAME, () => store.getState().app.selectedAddress)\r\n\r\n// const INTERVAL = 10 * 60 * 1000 // 10 minutes\r\n\r\nlet oldState = {\r\n    app: {}\r\n}\r\n\r\nlet pingInterval\r\n\r\n// protocol: 'http',\r\n//     domain: '127.0.0.1',\r\n//         port: 4999,\r\n//             url: '/airdrop/',\r\n//                 dhcpUrl: '/airdrop/ping/'\r\n\r\nstore.subscribe(() => {\r\n    const state = store.getState()\r\n    if (oldState.app.loggedIn !== state.app.loggedIn) {\r\n        loggedInStream.emit(state.app.loggedIn)\r\n    }\r\n    // This one may be a little on the heavy side...AHHH, NEED TO MOVE STORAGE OF ENCRYPTED SEED. DONE <3\r\n    if (oldState.config !== state.config) {\r\n        configStream.emit(state.config)\r\n    }\r\n    if (oldState.app.selectedAddress !== state.app.selectedAddress) {\r\n        console.log('Selected address changed')\r\n        // selectedAddressStream.emit(state.selectedAddress)\r\n        selectedAddressStream.emit({\r\n            address: state.app.selectedAddress.address,\r\n            color: state.app.selectedAddress.color,\r\n            nonce: state.app.selectedAddress.nonce,\r\n            textColor: state.app.selectedAddress.textColor\r\n        })\r\n\r\n        // Don't think we want this crap\r\n        // if (state.app.selectedAddress.address) {\r\n        //     const node = store.getState().config.coin.node.airdrop\r\n        //     const fn = () => {\r\n        //         console.log('PINGING DHCP')\r\n        //         const url = node.protocol + '://' + node.domain + ':' + node.port + node.dhcpUrl + state.app.wallet.addresses[0].address\r\n        //         console.log(url)\r\n        //         fetch(url, { mode: 'no-cors' }).then(res => console.log('Ping resonse', res)).catch(err => console.error('Ping error', err))\r\n        //     }\r\n        //     pingInterval = setInterval(fn, node.pingInterval)\r\n        //     fn()\r\n        // }\r\n    }\r\n    oldState = state\r\n})\r\n","/* STUFF THAT WE'RE NOT USING RESOLVE...WE'RE IMPORTING THE FILES DIRECTLY */\r\nimport { LitElement, html } from 'lit-element'\r\nimport { installRouter } from 'pwa-helpers/router.js'\r\n// import { LitElement, html, css, unsafeCSS } from 'lit-element'\r\n// Feel like I need to use sass for every element and just import it all individually...may result in some duplicate sass I guess\r\n// ...but maybe the bundler can be smart...doubt it\r\nimport { connect } from 'pwa-helpers'\r\nimport { store } from '../store.js'\r\nimport { doNavigate } from '../redux/app/app-actions.js'\r\nimport '../plugins/streams.js'\r\n\r\nimport '../styles/app-styles.js'\r\n// import styles from '../styles/styles.scss'\r\n// import './app-view.js'\r\nimport './login-view/login-view.js'\r\n\r\n// import './confirm-transaction-dialog.js'\r\nimport '../functional-components/confirm-transaction-dialog.js'\r\n\r\n// import('./app-view.js') // Async\r\nimport './app-view.js' // Screw em then, let's make ff work\r\n\r\ninstallRouter((location) => store.dispatch(doNavigate(location)))\r\n\r\n// console.log('==============')\r\n// console.log(styles)\r\n// console.log('==============')\r\n\r\nclass MainApp extends connect(store)(LitElement) {\r\n    static get properties () {\r\n        return {\r\n            name: { type: 'String' },\r\n            loggedIn: { type: Boolean }\r\n        }\r\n    }\r\n\r\n    static get styles () {\r\n        return [\r\n            // css`\r\n            //     ${unsafeCSS(styles)}\r\n            // `\r\n            // css(styles)\r\n        ]\r\n    }\r\n\r\n    // constructor () {\r\n    //     super()\r\n    // }\r\n    //  ?hidden=${!this.loggedIn}\r\n    render () {\r\n        return html`\r\n            <!-- <app-styles></app-styles> -->\r\n            <!-- Core layout goes here? Then the log out button can go alongside the log out button...and scale down to it? -->\r\n            <!-- No. login-view will go inside of app-view. Theme, plugin loading, and maybe the web workers will go here. -->\r\n            \r\n            <login-view></login-view>\r\n            \r\n            <app-view></app-view> <!-- Might dynamic import this one... YUP DEFINITELY :) -->\r\n            \r\n            <!-- <confirm-transaction-dialog></confirm-transaction-dialog> -->\r\n\r\n            <!-- <input type=\"text\" placeholder=\"name\" value=\"${this.name}\" @input=${this._nameChanged}> -->\r\n        `\r\n    }\r\n\r\n    _nameChanged (e) {\r\n        // store.dispatch(updateName(e.target.value))\r\n    }\r\n\r\n    stateChanged (state) {\r\n        // this.name = state.test.name\r\n        this.loggedIn = state.app.loggedIn\r\n        document.title = state.config.coin.name\r\n    }\r\n\r\n    connectedCallback () {\r\n        super.connectedCallback()\r\n    }\r\n}\r\n\r\nwindow.customElements.define('main-app', MainApp)\r\n"],"names":[],"mappings":"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"}